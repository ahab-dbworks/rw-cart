{"version":3,"sources":["loader.js","Components/catalogContainer.js","Components/superInput.js","Components/catalogItem.js","Components/radio.js","Components/catalog.js","Components/cartContainer.js","Components/cartItem.js","Components/cart.js","Components/superSelect.js","Components/superDate.js","Components/submitForm.js","Components/Colorz.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","props","message","input","console","log","className","style","color","textColor","CatalogContainer","loadAccessories","a","loader","rowContent","content","subRowCount","Rows","length","toggleExpanded","address","updateSubRows","isExpanded","rootParent","rowIndex","forceUpdate","subAddress","state","undefined","this","header","cart","addItemToCart","backgroundContrast","tabBtn","rowTab","onClick","accessoryContent","showRows","Object","keys","forEach","rowSet","indexOf","map","item","i","height","React","Component","SuperInput","changeMode","newMode","updateValue","stateValue","setState","mode","value","changeValue","e","target","enterValue","key","handleLoad","select","inputDisplay","type","onFocus","onBlur","onChange","onKeyPress","autoFocus","CatalogItem","rowHTML","rowDetails","iCode","id","toLowerCase","description","imgsrc","rate","avail","optional","parent","cartQ","qPlus","qMinus","quantity","actual","imageSource","src","q","toFixed","itemRow","rowOutput","RadioButton","checkMe","v","action","name","options","selected","label","option","checkedVal","icon","DISPLAYMODEOPTIONS","Catalog","loadInventory","search","searchField","setDisplayMode","displayMode","prevProps","_","isEqual","warehouse","inventoryType","category","getAccessories","activity","searchBar","catalogDisplay","filteredContent","filter","row","includes","loadMessage","placeholder","CartContainer","toggle","collapsedBody","collapseBody","isOnlyChild","branchTier","parentItemHeader","items","branchGroup","branchTierSubTotal","branchChain","isOption","push","headerBarContent","updateCart","details","join","CartItem","group","itemQuantity","Cart","cartList","cartBody","cartSubTotal","topTier","grandTotal","quotePeriod","isEmpty","flex","cartSwitchTotal","submitButton","submitQuote","toggleCart","cartMode","display","clearCart","SuperSelect","getOptions","values","reloadOn","preload","advPlaceholder","resetValues","searchable","customStyles","provided","isSelected","control","backgroundColor","opacity","fontStyle","indicatorSeparator","dropdownIndicator","isLoading","selectProps","padding","singleValue","loadingIndicator","valueContainer","optionsList","labelName","substring","toUpperCase","itemid","styles","classNamePrefix","isSearchable","Select","SuperDate","startDate","endDate","setDates","dates","selectsRange","inline","date","selectsStart","selectsEnd","minDate","DatePicker","SubmitForm","submit","newState","formFault","formField","blank","updateForm","prevState","project","contact","email","phone","note","width","field","cancel","HSLToHex","h","s","l","c","Math","abs","x","m","r","g","b","round","toString","Colorz","colors","setColors","changeHandler","colorSet","pickedColor","H","cmin","min","cmax","max","delta","hue","sat","lum","HexToHSL","newColors","clone","primary","htmlFor","secondary","background","APIURL","ACTIVITYLIST","code","App","addedItemBranchChain","popCart","accessories","Promise","all","acc","packageItem","index","defaultQuantity","itemPackage","ceil","fraction","default","available","icode","isShort","changeRoute","route","getCategories","credentials","page","fetch","method","headers","access_token","body","JSON","stringify","catch","err","resp","json","categories","categoryList","getCredentials","UserName","Password","then","response","res","getInventory","inventory","parentId","getInventoryTypes","types","inventoryTypeList","getWarehouses","warehouses","warehouseList","setMainModal","modalHTML","mainModal","setCategory","start","end","getNumberOfDays","setInventoryType","setActivity","setWarehouse","submitModal","formData","modalConfirmation","subcategory","Date","showColorsModal","contrast","renderColors","document","setProperty","d1","diffInTime","getTime","subCategory","customer","showColorModal","parseInt","getComputedStyle","getPropertyValue","slice","headerSection","colorsModal","paramColumn","catalogColumn","cartColumn","mainApp","statuscode","borderColor","activityList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e74040ce.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = (props) => {\n    const message = props.input ? props.input : \"LOADING\";\n    console.log(\"loader details:\", props, message);\n    return (\n        <div className=\"loader-blip\" style={{color: props.textColor}}>\n            <div className=\"loader-text\">{message}</div>\n            <ul className=\"blips\">\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react';\nimport CatalogItem from './catalogItem';\nimport Loader from '../loader';\nimport _ from 'lodash';\n\nclass CatalogContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        this.isExpanded = false\n        this.subRowCount = 1;\n        this.content = undefined;\n        this.rowIndex = {};\n    }\n\n    loadAccessories = async () => {\n        this.content = await this.props.loader(this.props.rowContent[2]);\n        this.subRowCount = this.content.Rows.length;\n    }\n\n    toggleExpanded = async () => {\n        const { address, updateSubRows } = this.props;\n        this.isExpanded = !this.isExpanded;\n        if (!this.content) {\n            await this.loadAccessories();\n        }\n        if (this.props.rootParent) {\n            this.rowIndex[address] = this.subRowCount;\n            this.forceUpdate()\n        } else {\n            updateSubRows(address, (this.isExpanded ? this.subRowCount : 0));\n        }\n        \n    }\n\n    updateSubRows = (subAddress, subRowCount) => {\n        this.rowIndex[subAddress] = subRowCount;\n        this.forceUpdate();\n    }\n\n    render() {\n        const { address, header, cart, loader, addItemToCart, backgroundContrast } = this.props;\n        let rowIndex, updateSubRows = undefined;\n        if (this.props.rootParent) {\n            updateSubRows = this.updateSubRows;\n            rowIndex = this.rowIndex;\n        } else {\n            updateSubRows = this.props.updateSubRows;\n            rowIndex = this.props.rowIndex\n        }\n        //\n        const tabBtn = this.isExpanded ? \"expand_less\" : \"expand_more\";\n        const rowTab = <div className=\"row-expander btn\" onClick={this.toggleExpanded}><i>{tabBtn}</i></div>\n        //\n        let accessoryContent = undefined;\n        let showRows = 1;\n        if (this.isExpanded) {\n            Object.keys(rowIndex).forEach(rowSet => {\n                if (rowSet.indexOf(address) === 0) {\n                    showRows += rowIndex[rowSet];\n                }\n            })\n            if (this.content) {\n                accessoryContent = this.content.Rows.map((item, i) => {\n                    return (\n                        <div key={i} className={`catalog-item-container ${item[19]}`}>\n                            <CatalogItem\n                                address={address}\n                                rowContent={item}\n                                cart={cart}\n                                loader={loader}\n                                addItemToCart={addItemToCart}\n                                updateSubRows={updateSubRows}\n                                rootParent={false}\n                                rowIndex={rowIndex}\n                            />\n                        </div>\n                    )\n                })\n            } else {\n                accessoryContent = <Loader/>\n            }\n        } else {\n            showRows = 1;\n        }\n\n        \n\n        //style={{ height: (subRowCount * 50) + \"px\" }} -- in parent div (below) for animated row expansion\n        return (\n            <div className=\"collapsible-container\" style={{ height: ((showRows * 52) + (this.isExpanded ? showRows * 2 : 0)) + \"px\" }}>  \n                <div className=\"container-header\">\n                    {rowTab}\n                    {header}\n                </div>\n                <div className=\"container-accessories\">\n                    {accessoryContent}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CatalogContainer;","import React from 'react';\nimport _ from 'lodash';\n\nclass SuperInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"read\",\n            stateValue: this.props.value\n        }\n    }\n\n    changeMode = (newMode) => {\n        switch (newMode) {\n            case \"read\":\n                this.props.updateValue(this.state.stateValue);\n                this.setState({ mode: \"read\" });\n                break;\n            case \"write\":\n                this.setState({ mode: \"write\", stateValue: this.props.value });\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeValue = (e) => {\n        this.setState({ stateValue: e.target.value })\n    }\n\n    enterValue = (e) => {\n        if (e.key === \"Enter\") {\n            this.changeMode(\"read\");\n        }\n    }\n\n    handleLoad = (e) => {\n        e.target.select();\n    }\n\n    render() {\n        const { mode, stateValue } = this.state;\n        const { value } = this.props;\n        let inputDisplay = undefined;\n        switch (mode) {\n            case \"read\":\n                inputDisplay =\n                    <div className=\"super-input\">{value}</div>\n                break;\n            case \"write\":\n                inputDisplay =\n                    <input className=\"super-input\" type=\"number\" onFocus={this.handleLoad} onBlur={() => this.changeMode(\"read\")} onChange={this.changeValue} onKeyPress={this.enterValue} value={stateValue} autoFocus/>\n        }\n        return (\n            <div className=\"super-input-container\" onClick={() => this.changeMode(\"write\")}>\n                {inputDisplay}\n            </div>\n        )\n    }\n}\n\nexport default SuperInput;","import React from 'react';\nimport CatalogContainer from './catalogContainer';\nimport SuperInput from './superInput';\n\nconst CatalogItem = (props) => {\n    const address = props.address + \"~\" + props.rowContent[7] + (props.rowContent[3] != null ? \"x\" + props.rowContent[0] : \"\");\n\n    const itemRow = (item) => {\n        const { cart } = props;\n        const rowDetails = {\n            address: address,\n            iCode: item[5],\n            id: item[0],\n            type: item[19].toLowerCase(),\n            description: item[7],\n            imgsrc: item[46],\n            rate: item[35],\n            avail: item[22],\n            optional: item[51],\n            parent: item[3]\n        }\n\n        let cartQ = 0;\n        let qPlus = false;\n        let qMinus = false;\n        if (rowDetails.avail > 0) {\n            if (cart[rowDetails.address]) {\n                cartQ = cart[rowDetails.address].quantity.actual;\n                qMinus = cartQ > 0 ? true : false;\n                if (rowDetails.avail > cartQ) {\n                    qPlus = true;\n                }\n            } else {\n                qPlus = true;\n            }\n        }\n        \n        let imageSource = undefined;\n        if (rowDetails.imgsrc) {\n            imageSource = <div className=\"item-image-thumbnail\"><img src={rowDetails.imgsrc}/></div>\n        } else {\n            imageSource = <div className=\"item-image-thumbnail\"><i>cancel_presentation</i><br/><span>No Image</span></div>\n        }\n\n        let optional = \"\";\n        if (rowDetails.parent) {\n            optional = rowDetails.optional ? \"optional\" : \"required\"\n        }\n\n        return (\n            <ul className=\"catalog-item-elements\">\n                <li className={`item-segment item-quantity ${optional}`}>\n                    <div className=\"quantity-control\">\n                        <div className={`btn${qMinus ? \"\" : \" inactive\"}`} onClick={(qMinus ? () => props.addItemToCart(item, rowDetails.address, cartQ - 1) : null)}>\n                            <i>remove</i>\n                        </div>\n                        <div className=\"quantity-count\">\n                            <SuperInput\n                                value={cartQ}\n                                updateValue={(q) => props.addItemToCart(item, rowDetails.address, q)}\n                            />\n                        </div>\n                        <div className={`btn${qPlus ? \"\" : \" inactive\"}`} onClick={(qPlus ? () => props.addItemToCart(item, rowDetails.address, cartQ + 1) : null)}>\n                            <i>add</i>\n                        </div>\n                    </div>\n                </li>\n                <li className=\"item-segment item-image\">{imageSource}</li>\n                <li className=\"item-segment item-description\"><div className=\"row-description\">{rowDetails.description}</div></li>\n                <li className=\"item-segment item-rate numeric\"><div className=\"grid-label\">Rate:</div><div>$ {rowDetails.rate.toFixed(2)}</div></li>\n                {/* <li className=\"item-segment numeric\"><div className=\"grid-label\">Available:</div><div>{rowDetails.avail}</div></li> */}\n            </ul>\n        )\n    }\n\n    const { rowContent, cart, loader, addItemToCart, updateSubRows, rowIndex, rootParent, backgroundContrast } = props;\n    const rowHTML = itemRow(rowContent);\n    let rowTab = null;\n    let rowOutput = undefined;\n    switch (rowContent[19]) {\n        case \"ITEM\":\n        case \"ACCESSORY\":\n            rowTab = <div className=\"row-expander\"></div>\n            rowOutput = rowHTML\n            break;\n        default:\n            rowOutput =\n                <CatalogContainer\n                    address={address}\n                    header={rowHTML}\n                    rowContent={rowContent}\n                    cart={cart}\n                    loader={loader}\n                    addItemToCart={addItemToCart}\n                    updateSubRows={updateSubRows}\n                    rowIndex={rowIndex}\n                    rootParent={rootParent}\n                />\n            break;\n    }\n    return (\n        <div className=\"catalog-item\">\n            { rowTab }\n            { rowOutput }\n        </div>\n    )\n}\n\nexport default CatalogItem;","import React from \"react\";\n\nclass RadioButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    checkMe = (v) => {\n        this.props.action(v);\n    }\n\n    render() {\n        const { name, options, selected } = this.props;\n        if (options.length > 0) {\n            let label = undefined;\n            return (\n                <div className=\"radio-set\">\n                    <div className=\"super-label\">{name}</div>\n                    <ul className=\"radio-list\">\n                        {\n                            options.map((option, i) => {\n                                const checkedVal = selected === option.name ? \"checked\" : \"\";\n                                if (option.icon) {\n                                    label = <i className=\"\">{option.icon}</i>\n                                } else {\n                                    label = option.label\n                                }\n                                return (\n                                    \n                                    <li\n                                        key={i}\n                                        onClick={() => this.checkMe(option)}\n                                        className={`radio-option ${checkedVal}`}\n                                    >\n                                        {label}\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n        } else {\n            return <div className=\"radio-set\"></div>\n        }\n    }\n}\n\nexport default RadioButton;","import React from 'react';\nimport _ from 'lodash';\nimport CatalogItem from './catalogItem';\nimport RadioButton from './radio';\nimport Loader from '../loader';\n\nconst DISPLAYMODEOPTIONS = [\n    {\n        name: \"grid\",\n        value: \"G\",\n        label: \"Grid\",\n        icon: \"calendar_view_month\"\n    },\n    {\n        name: \"table\",\n        value: \"T\",\n        label: \"Table\",\n        icon: \"reorder\"\n    }\n]\n\nclass Catalog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayMode: DISPLAYMODEOPTIONS[1],\n            content: undefined,\n            searchField: \"\"\n        }\n        this.mode = \"waiting\";\n    }\n\n    loadInventory = async () => {\n        this.mode = \"loading\";\n        const content = await this.props.loader();\n        // console.log(\"loaded:\", content);\n        if (content) {\n            this.mode = \"display\"\n            this.setState({ content: content });\n        }\n    }\n\n    search = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    setDisplayMode = (e) => {\n        this.setState({ displayMode: e })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!_.isEqual(this.props, prevProps)) {\n            console.log(\"a catalog prop has changed\")\n            \n            this.loadInventory();\n        }    \n    }\n    componentDidMount() {\n        console.log(this.props);\n        const { warehouse, inventoryType, category } = this.props;\n        if (warehouse && inventoryType && category) {\n            this.loadInventory();\n        }\n    }\n\n    render() {\n        const { displayMode, content, searchField } = this.state;\n        const { cart, getAccessories, addItemToCart, activity, warehouse, inventoryType, category } = this.props;\n        let searchBar = undefined;\n        let catalogDisplay = undefined;\n\n        let address = undefined;\n        if (category === null || inventoryType === null || warehouse === null || activity === null) {\n            this.mode = \"waiting\";\n        }\n        \n        switch (this.mode) {\n            case \"waiting\":\n                catalogDisplay = <div className=\"modal abs barlow\">AWAITING PARAMETERS</div>\n                break;\n            case \"loading\":\n                catalogDisplay = <div className=\"modal abs\"><Loader/></div>\n                break;\n            case \"display\":\n                address = `${activity.name}~${warehouse.name}~${inventoryType.name}~${category.name}`;\n                const filteredContent = content.Rows.filter(row => {\n                    return row[7].toLowerCase().includes(searchField.toLowerCase())\n                })\n                let loadMessage = \"\";\n                if (filteredContent.length > 0) {\n                    loadMessage = null;\n                } else {\n                    loadMessage = <div className=\"modal abs\">No inventory items match this criteria</div>\n                }\n                searchBar =\n                <div className=\"search-field\">\n                    <input type=\"text\" onChange={this.search} value={searchField} placeholder=\"Search...\" />\n                    <RadioButton\n                        name=\"Display Mode\"\n                        options={DISPLAYMODEOPTIONS}\n                        selected={displayMode.name}\n                        action={this.setDisplayMode}\n                    />\n                </div>\n                switch (displayMode.name) {\n                    case \"table\":\n                        catalogDisplay = \n                        <div className=\"dbw-table\">\n                            <div className=\"dbw-thead\">\n                                <ul className=\"row-header\">\n                                    <li className=\"row-expander\"></li>\n                                    <li className=\"item-segment item-quantity\">Quantity</li>\n                                    <li className=\"item-segment item-image\">Image</li>\n                                    <li className=\"item-segment item-description\">Item</li>\n                                    <li className=\"item-segment item-rate\">Rate</li>\n                                    {/* <li className=\"item-segment\">Available</li> */}\n                                </ul>\n                            </div>\n                            <div className=\"dbw-tbody\">\n                                {\n                                    filteredContent.map((item, i) => {\n                                        return (\n                                            <div key={i} className={`catalog-item-container ${item[19]}`}>\n                                                <CatalogItem\n                                                    address={address}\n                                                    rowContent={item}\n                                                    cart={cart}\n                                                    loader={getAccessories}\n                                                    addItemToCart={addItemToCart}\n                                                    rootParent={true}\n                                                />\n                                            </div>\n                                        )\n                                    })\n                                }\n                                {loadMessage}\n                            </div>\n                        </div>\n                        break;\n                    case \"grid\":\n                        catalogDisplay =\n                            <div className=\"dbw-grid\">\n                                {\n                                    filteredContent.map((item, i) => {\n                                        return (\n                                            <div key={i} className={`catalog-item-container ${item[19]}`}>\n                                                <CatalogItem\n                                                    address={address}\n                                                    rowContent={item}\n                                                    cart={cart}\n                                                    loader={getAccessories}\n                                                    addItemToCart={addItemToCart}\n                                                    rootParent={true}\n                                                />\n                                            </div>\n                                        )\n                                    })\n                                }\n                                {loadMessage}\n                            </div>\n                        break;\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <section className=\"catalog\">\n                {searchBar}\n                {catalogDisplay}\n            </section>\n        )\n    }\n}\n\nexport default Catalog;","import React from 'react';\nimport CartItem from './cartItem';\nimport SuperInput from './superInput';\n\nclass CartContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsedBody: false\n        }\n    }\n\n    toggle = () => {\n        const { collapsedBody } = this.state;\n        this.setState({ collapsedBody: !collapsedBody });\n    }\n\n    componentDidMount() {\n        const {collapseBody} = this.props;\n        if (collapseBody) {\n            this.setState({ collapsedBody: collapseBody });\n        }\n    }\n\n    render() {\n        const { collapsedBody } = this.state;\n        const { isOnlyChild, branchTier, label, parentItemHeader, items } = this.props;\n        const collapseBtn = collapsedBody ? \"drag_handle\" : \"view_day\";\n\n        let branchGroup = {}\n        let branchTierSubTotal = 0;\n        items.forEach(item => {\n            if (item.branchChain.length === 5 || item.isOption) branchTierSubTotal += item.quantity.actual * item.rate;\n            if (!branchGroup[item.branchChain[branchTier]]) {\n                branchGroup[item.branchChain[branchTier]] = [];\n            }\n            branchGroup[item.branchChain[branchTier]].push(item);\n        })\n\n        let headerBarContent = undefined;\n        if (branchTier < 5) {\n            headerBarContent =\n                <ul className=\"branch-header\">\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_more\" : \"expand_less\"}</i></li>\n                    <li className=\"cart-col name\">{label}</li>\n                    <li className=\"cart-col rate numeric\">{branchTierSubTotal.toFixed(2)}</li>\n                </ul>\n        } else {\n            headerBarContent =\n                <ul className={`kit-complete-header ${parentItemHeader.parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_more\" : \"expand_less\"}</i></li>\n                    <li className=\"cart-col quantity numeric\">\n                        <div className=\"super-input-container\">\n                            <SuperInput\n                                value={parentItemHeader.quantity.actual}\n                                updateValue={(q) => this.props.updateCart(parentItemHeader.details, parentItemHeader.branchChain.join(\"~\"), q)}\n                            />\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\">{parentItemHeader.name}</li>\n                    <li className=\"cart-col rate numeric\">{parentItemHeader.rate.toFixed(2)}</li>\n                </ul>\n        }\n        return (\n            <div key={label} className={`collapser-container${(parentItemHeader ? \" kit-complete\" : \"\")}${(branchTier < 5 ? \" branch-container\" : \"\")}${isOnlyChild ? \" hidden\" : \" show\"}`}>\n                <div className={`collapser-header`}>\n                    {headerBarContent}\n                </div>\n                <ul className={`content-container ${collapsedBody ? \"hidden\" : \"show\"}`}>\n                    {\n                        Object.keys(branchGroup).map(address => {\n                            return (\n                                <CartItem\n                                    branchTier={branchTier + 1}\n                                    label={address}\n                                    content={branchGroup[address]}\n                                    isOnlyChild={Object.keys(branchGroup).length === 1 && branchTier < 4}\n                                    updateCart={this.props.updateCart}\n                                />\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default CartContainer;","import React from 'react';\nimport CartContainer from './cartContainer';\nimport SuperInput from './superInput';\n\nconst CartItem = (props) => {\n    const { branchTier, label, content, isOnlyChild } = props;\n\n    let parentItemHeader = undefined;\n    if (content.length > 1 || branchTier < 5) {\n        let group = [];\n        content.forEach(item => {\n            if (item.branchChain.length > branchTier) {\n                group.push(item);\n            } else {\n                parentItemHeader = item;\n            }\n        })\n        return (\n            <div key={label} className={`cart-item${(branchTier < 5 ? \" branch\" : \"\")}${isOnlyChild ? \" hide\" : \" show\"}`}>\n                <CartContainer\n                    branchTier={branchTier}\n                    label={label}\n                    parentItemHeader={parentItemHeader}\n                    items={group}\n                    isOnlyChild={isOnlyChild}\n                    updateCart={props.updateCart}\n                />\n            </div>\n        )\n    } else {\n        let itemQuantity = content[0].quantity.actual;\n        if (!content[0].parent || content[0].parent && content[0].isOption) {\n            itemQuantity =\n                <SuperInput\n                    value={content[0].quantity.actual}\n                    updateValue={(q) => props.updateCart(content[0].details, content[0].branchChain.join(\"~\"), q)}\n                />\n        }\n        return (\n            <div key={label} className=\"cart-item\">\n                <ul className={`${content[0].isOption ? \"option\" : \"\"} ${content[0].parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"cart-col\">•</li>\n                    <li className=\"cart-col quantity numeric\">\n                        <div className=\"super-input-container\">\n                            {itemQuantity}\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\">{content[0].name}</li>\n                    <li className=\"cart-col rate numeric\">{content[0].rate.toFixed(2)}</li>\n                </ul>\n            </div>\n        )  \n    }\n\n}\n\nexport default CartItem;","import React from 'react';\nimport RadioButton from './radio';\nimport CartItem from './cartItem';\nimport _ from 'lodash';\n\nconst Cart = (props) => {\n    const { cartList } = props;\n    let cartBody = undefined;\n    let cartSubTotal = 0;\n    let topTier = {}\n    Object.keys(cartList).forEach(key => {\n        const item = cartList[key];\n        if (item.branchChain.length === 5 || item.isOption) cartSubTotal += item.rate * item.quantity.actual;\n        if (!topTier[item.branchChain[0]]) {\n            topTier[item.branchChain[0]] = [];\n        }\n        topTier[item.branchChain[0]].push(item);\n    })\n    const grandTotal = cartSubTotal * props.quotePeriod;\n    \n    if (!_.isEmpty(cartList)) {\n        cartBody = \n        <div className=\"dbw-table\">\n            <div className=\"dbw-thead\">\n                <ul className=\"dbw-header\">\n                    <li className=\"cart-col spacer\"></li>\n                    <li className=\"cart-col quantity numeric\">Q</li>\n                    <li className=\"cart-col name\">Item</li>\n                    <li className=\"cart-col rate numeric\">Rate</li>\n                </ul>\n            </div>\n            <div className=\"dbw-tbody\">\n                {\n                    Object.keys(topTier).map(key => {\n                        \n                        return (\n                            <CartItem\n                                branchTier={1}\n                                label={key}\n                                content={topTier[key]}\n                                isOnlyChild={Object.keys(topTier).length === 1}\n                                updateCart={props.updateCart}\n                            />\n                        )\n                    })\n                }\n            </div>\n        </div>\n        \n        \n    } else {\n        cartBody = <div className=\"modal barlow\" style={{flex:1}}>Cart Empty</div>\n    }\n    const cartSwitchTotal = grandTotal > 0 ? grandTotal.toFixed(2) : \"\";\n    const submitButton = (Object.keys(cartList).length > 0 ? <div className=\"text-button\" onClick={props.submitQuote}><i>send</i><span>Submit Quote</span></div> : <div className=\"text-button disabled\" ><i>send</i><span>Submit Quote</span></div>);\n    \n    return (\n        <div>\n            <div className=\"slide-panel-switch barlow\" onClick={props.toggleCart}>\n                {\n                    props.cartMode === \"in\" ? <i>logout</i> : <div style={{display: \"flex\"}}><i>shopping_cart</i>{cartSwitchTotal}</div>\n                }\n            </div>\n            <div className={`cart slide-panel ${props.cartMode}`}>\n                <div className=\"column-header param-set\">\n                    <h1><i>shopping_cart</i>CART</h1>\n                </div>\n                <div className=\"cart-contents param-set\">\n                    {cartBody}\n                </div>\n                <div className=\"cart-summary param-set barlow\">\n                    <div className=\"cart-summary-row\">\n                        <span>Daily Subtotal:</span>\n                        $\n                        {cartSubTotal.toFixed(2)}\n                    </div>\n                    <div className=\"cart-summary-row\">\n                        <span>Quote Duration</span>\n                        {props.quotePeriod} {(props.quotePeriod > 1 ? \"Days\" : \"Day\")}\n                    </div>\n                    <div className=\"cart-summary-row grand\">\n                        <span>Total:</span>\n                        $\n                        {(cartSubTotal * props.quotePeriod).toFixed(2)}\n                    </div>\n                </div>\n                <div className=\"panel-buttons\">\n                    <div className=\"text-button secondary dim\" onClick={props.clearCart}><i>delete_forever</i><span>Clear Cart</span></div>\n                    {submitButton}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;","import React from 'react';\nimport Select, { NonceProvider } from 'react-select';\nimport _ from 'lodash';\n\nclass SuperSelect extends Select {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"waiting\",\n            options: undefined\n        }\n    }\n\n    getOptions = async () => {\n        this.setState({ mode: \"loading\" });\n        const options = await this.props.loader(this.props.filter);\n        if (options) {\n            switch (Object.values(options).length) {\n                case 0:\n                    this.setState({ mode: \"empty\" })\n                    break;\n                case 1:\n                    Object.values(options).forEach(value => this.props.action(value));\n                default:\n                    this.setState({ mode: \"display\", options: options });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!_.isEqual(this.props, prevProps)) {\n            if (this.props.reloadOn.includes(null)) {\n                this.setState({ mode: \"waiting\", options: undefined });\n            } else {\n                this.getOptions();\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.preload) {\n            this.getOptions();\n        }\n    }\n\n    render() {\n        const { mode, options, resetValues } = this.state;\n        const { name, action, searchable, placeholder, value, textColor } = this.props;\n        const customStyles = {\n            option: (provided, state) => ({\n                ...provided,\n                color: state.isSelected ? 'white' : 'black',\n            }),\n            control: () => ({\n                backgroundColor: 'transparent',\n                display: 'flex',\n            }),\n            placeholder: () => ({\n                color: textColor,\n                opacity: 0.5,\n                fontStyle: 'italic'\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                backgroundColor: textColor\n            }),\n            dropdownIndicator: (provided, { selectProps: { isLoading }}) => ({\n                ...provided,\n                color: textColor,\n                opacity: isLoading ? 0.5 : 1,\n                \"&:hover\": {\n                    color: ''\n                },\n                padding: '0.5em 0 0.5em 1em'\n            }),\n            singleValue: () => ({\n                color: textColor,\n            }),\n            loadingIndicator: (provided) => ({\n                ...provided,\n                color: textColor\n            }),\n            valueContainer: (provided) => ({\n                ...provided,\n                padding: 0\n            })\n        }\n        //\n\n        //\n        let isLoading = true;\n        let advPlaceholder, optionsList = null;\n        const labelName = name.substring(0, 1).toUpperCase() + name.substring(1);\n        switch (mode) {\n            case \"empty\":\n                advPlaceholder = \"No Options\"\n                isLoading = false;\n                break;\n            case \"waiting\":\n                advPlaceholder = \"Awaiting Parameters...\";\n                break;\n            case \"loading\":\n                advPlaceholder = \"Loading Options...\";\n                break;\n            case \"display\":\n                advPlaceholder = placeholder;\n                isLoading = false;\n                optionsList = Object.keys(options).map(itemid => {\n                    return options[itemid];\n                })\n                break;\n            default:\n                break;\n        }\n        return (\n            <div className=\"selector-set\">\n                <div className=\"super-label\">{labelName}</div>\n                <Select\n                    styles={customStyles}\n                    className={`selector ${name}-select`}\n                    classNamePrefix={`${name}-select`}\n                    isLoading={isLoading}\n                    options={optionsList}\n                    onChange={action}\n                    placeholder={advPlaceholder}\n                    isSearchable={searchable}\n                    value={value}\n                />  \n            </div>\n        )\n    }\n}\n\nexport default SuperSelect;","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass SuperDate extends DatePicker {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        \n    }\n\n    render() {\n        const { startDate, endDate, setDates, textColor } = this.props;\n        switch (this.props.mode) {\n            case \"combined\":\n                return (\n                    <div className={`date-selector`}>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={dates => setDates(dates)}\n                            startDate={startDate}\n                            endDate={endDate}\n                            selectsRange\n                            inline\n                        />\n                    </div>\n                )\n            case \"start\":\n                return (\n                    <div className={`date-selector ${textColor}`}>\n                        <div className=\"super-label\">Start</div>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={date => setDates([date, endDate])}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                        />\n                    </div>\n                )\n            case \"end\":\n                return (\n                    <div className={`date-selector ${textColor}`}>\n                        <div className=\"super-label\">End</div>\n                        <DatePicker\n                            selected={endDate}\n                            onChange={date => setDates([startDate, date])}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                        />\n                    </div>\n                )\n            default:\n        }\n    }\n}\n\nexport default SuperDate;","import React from 'react';\n\nclass SubmitForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: {label: \"Project\", value: \"\", blank: false, type: \"text\"},\n            contact: {label: \"Contact\", value: \"\", blank: false, type: \"text\"},\n            email: {label: \"Email\", value: \"\", blank: false, type: \"email\"},\n            phone: {label: \"Phone\", value: \"\", blank: false, type: \"text\"},\n            note: {label: \"Note\", value: \"\", blank: false, type: \"textarea\"}\n        }\n    }\n\n    submit = () => {\n        let newState = {}\n        let formFault = false;\n        Object.keys(this.state).forEach(formField => {\n            newState[formField] = this.state[formField];\n            if (newState[formField].value === \"\" && newState[formField].label != \"Note\") {\n                newState[formField].blank = true;\n                formFault = true;\n            }\n        })\n        if (formFault) {\n            this.setState(newState)\n        }else{\n            this.props.submit(this.state);\n        }\n    }\n\n    updateForm = (e) => {\n        console.log(e);\n        this.setState(prevState => ({ [e.target.id]: {...prevState[e.target.id], value: e.target.value} }));\n    }\n\n    render() {\n        return (\n            <div className=\"modal-layer\">\n                <div className=\"modal\">\n                    <div id=\"submitQuote\" className=\"modal-container\" style={{width: \"500px\"}}>\n                        <div className=\"modal-header barlow\">\n                            Request Quote\n                        </div>\n                        <div className=\"modal-body\">\n                            {\n                                Object.keys(this.state).map(key => {\n                                    const field = this.state[key];\n                                    return (\n                                        <div className={`input-set ${field.type}`}>\n                                            <div className=\"input-set-label\">{field.label}</div>\n                                            {\n                                                (field.type === \"textarea\" ? <textarea id={key} type={field.type} className={(field.blank ? \"fault\" : \"\")} onChange={(e) => this.updateForm(e)} value={field.value}/> : <input id={key} type={field.type} className={(field.blank ? \"fault\" : \"\")} onChange={(e) => this.updateForm(e)} value={field.value}/>)\n                                            }\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"panel-buttons\">\n                            <div className=\"text-button secondary dim\" onClick={this.props.cancel}><i>do_disturb</i><span>Cancel</span></div>\n                            <div className=\"text-button\" onClick={this.submit}><i>send</i><span>Submit</span></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-backdrop abs\" onClick={this.props.cancel}></div>\n            </div>\n        )\n    }\n}\n\nexport default SubmitForm;","import React from 'react';\nimport _ from 'lodash';\n\nconst HSLToHex = (h,s,l) => {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n        m = l - c / 2,\n        r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c; g = x; b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x; g = c; b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0; g = c; b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0; g = x; b = c;\n    } else if (240 <= h && h < 300) {\n        r = x; g = 0; b = c;\n    } else if (300 <= h && h < 360) {\n        r = c; g = 0; b = x;\n    }\n    // Having obtained RGB, convert channels to hex\n    r = Math.round((r + m) * 255).toString(16);\n    g = Math.round((g + m) * 255).toString(16);\n    b = Math.round((b + m) * 255).toString(16);\n\n    // Prepend 0s, if necessary\n    if (r.length == 1)\n        r = \"0\" + r;\n    if (g.length == 1)\n        g = \"0\" + g;\n    if (b.length == 1)\n        b = \"0\" + b;\n\n    return \"#\" + r + g + b;\n}\n\nconst HexToHSL = (H) => {\n    // Convert hex to RGB first\n    let r = 0, g = 0, b = 0;\n    if (H.length == 4) {\n      r = \"0x\" + H[1] + H[1];\n      g = \"0x\" + H[2] + H[2];\n      b = \"0x\" + H[3] + H[3];\n    } else if (H.length == 7) {\n      r = \"0x\" + H[1] + H[2];\n      g = \"0x\" + H[3] + H[4];\n      b = \"0x\" + H[5] + H[6];\n    }\n    // Then to HSL\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n  \n    if (delta == 0)\n      h = 0;\n    else if (cmax == r)\n      h = ((g - b) / delta) % 6;\n    else if (cmax == g)\n      h = (b - r) / delta + 2;\n    else\n      h = (r - g) / delta + 4;\n  \n    h = Math.round(h * 60);\n  \n    if (h < 0)\n      h += 360;\n  \n    l = (cmax + cmin) / 2;\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    const hsl = {\n        hue: h,\n        sat: s,\n        lum: l\n    }\n  \n    return hsl;\n  }\n\nconst Colorz = ({colors, setColors}) => {\n    const changeHandler = (e, colorSet) => {\n        const pickedColor = HexToHSL(e.target.value);\n        const newColors = _.clone(colors);\n        newColors[colorSet] = pickedColor\n        console.log(\"changing colors:\", newColors);\n        setColors(newColors);\n    }\n    console.log(\"rendering with\", colors);\n    return (\n        <div className=\"modal draggable\">\n            <div className=\"modal-container\">\n                <div className=\"modal-header barlow\">Colorize</div>\n                <div className=\"modal-body\">\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"primary\" onChange={(e) => changeHandler(e, \"primary\")} value={HSLToHex(colors.primary.hue, colors.primary.sat, colors.primary.lum)}/>\n                        <label htmlFor=\"primary\">Primary Color</label>\n                    </div>\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"secondary\" onChange={(e) => changeHandler(e, \"secondary\")} value={HSLToHex(colors.secondary.hue, colors.secondary.sat, colors.secondary.lum)}/>\n                        <label htmlFor=\"secondary\">Secondary Color</label>\n                    </div>\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"background\" onChange={(e) => changeHandler(e, \"background\")} value={HSLToHex(colors.background.hue, colors.background.sat, colors.background.lum)}/>\n                        <label htmlFor=\"background\">Background Color</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Colorz;","import './App.css';\nimport React from 'react';\nimport Catalog from './Components/catalog';\nimport Cart from './Components/cart';\nimport SuperSelect from './Components/superSelect';\nimport SuperDate from './Components/superDate';\nimport RadioButton from './Components/radio';\nimport Loader from './loader';\nimport SubmitForm from './Components/submitForm';\nimport Colorz from './Components/Colorz';\nimport _ from 'lodash';\n\n\nconst APIURL = 'https://demo.rentalworksweb.com/api/v1';\nconst ACTIVITYLIST = [\n  {\n    name: \"RENTAL\",\n    code: \"R\",\n    label: \"Rental\"\n  },\n  {\n    name: \"SALES\",\n    code: \"S\",\n    label: \"Sales\"\n  },\n  {\n    name: \"PARTS\",\n    code: \"P\",\n    label: \"Parts\"\n  }\n  // {\n  //   name: \"labor\",\n  //   code: \"L\",\n  //   label: \"Labor\"\n  // },\n  // {\n  //   name: \"misc\",\n  //   code: \"M\",\n  //   label: \"Misc\"\n  // }\n]\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      route: \"home\",\n      mainModal: null,\n      credentials: null,\n      activity: ACTIVITYLIST[0],\n      inventoryType: null,\n      category: null,\n      subCategory: null,\n      warehouse: null,\n      customer: \"\",\n      email: \"\",\n      cartList: {},\n      startDate: new Date(),\n      endDate: new Date(),\n      quotePeriod: 1,\n      cartMode: \"out\",\n      showColorModal: false,\n      colors: {\n        primary: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-lum').slice(0,-1))\n        },\n        secondary: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-lum').slice(0,-1))\n        },\n        background: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--background-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--background-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--background-lum').slice(0,-1))\n        }\n      }\n    };\n  }\n\n  addItemToCart = async(item, addedItemBranchChain, q) => {\n    const { cartList, activity, warehouse, inventoryType, category } = this.state;\n    const popCart = _.isEmpty(cartList)\n    const loadAccessories = async (parent) => {\n      const accessories = await this.getAccessories(parent.id);\n      const accessoryList = await Promise.all(accessories.Rows.map(async (acc, i) => {\n        return await packageItem(acc, i, parent);\n      }))\n    }\n    const packageItem = async (item, index, parent) => {\n      const defaultQuantity = parent ? item[52] : 1; //item[52] is \"defaultQuantity\"\n      let itemPackage = {\n        branchChain: parent ? [...parent.branchChain, item[7] + \"x\" + item[0]] : [activity.name, warehouse.name, inventoryType.name, category.name, item[7]],\n        quantity: {\n          actual: item[51] ? 0 : Math.ceil(defaultQuantity * q),\n          fraction: item[51] ? 0 : defaultQuantity * q,\n          default: defaultQuantity\n        },\n        available: item[22],\n        details: item,\n        icode: item[5],\n        id: item[2],\n        index: index,\n        name: item[7],\n        parent: parent,\n        rate: item[35],\n        type: item[19],\n        isOption: item[51],\n        isShort: false,\n        activity: activity,\n        warehouse: warehouse,\n        inventoryType: inventoryType,\n        category: category\n      }\n      if (itemPackage.type != \"ITEM\" && itemPackage.type != \"ACCESSORY\") {\n        await loadAccessories(itemPackage);\n      }\n      cartList[itemPackage.branchChain.join(\"~\")] = itemPackage;\n    }\n\n    // correct q if greater than supply\n    console.log(\"q is\", q, \"and availability is\", item[22]);\n    q = Math.min(q, item[22]);\n    \n    //add item or update quantity?\n    if (cartList[addedItemBranchChain]) {\n      Object.keys(cartList).forEach(key => {\n        if (key.indexOf(addedItemBranchChain) === 0) {\n          if (q <= 0 && !cartList[addedItemBranchChain].isOption) {\n            delete cartList[key];\n          } else {\n            // updating fraction value\n            if (!cartList[key].isOption) {\n              cartList[key].quantity.fraction = (cartList[key].quantity.default * q);\n            } else if (cartList[key].isOption && key === addedItemBranchChain) {\n              cartList[key].quantity.fraction = q;\n            }\n            // correcting negative fraction values\n            if (cartList[key].quantity.fraction < 0) {\n              cartList[key].quantity.fraction = 0;\n            }\n            // setting actual to next-highest whole num of fraction\n            cartList[key].quantity.actual = Math.ceil(cartList[key].quantity.fraction);\n          }\n        }\n      })\n    } else {\n      if (!item[51] && q != 0) await packageItem(item);\n    }\n\n    //\n    if (popCart) {\n      this.toggleCart(\"in\");\n    }\n    console.log(\"cartList:\", cartList);\n    this.setState({ cartList: cartList });\n  }\n\n  clearCart = () => {\n    this.setState({ cartList: {} })\n  }\n\n  changeRoute = (route) => {\n    this.setState({ route: route });\n  }\n\n  getCategories = async () => {\n    const { credentials, activity, inventoryType } = this.state;\n    if (this.state.inventoryType) {\n      this.page = 1;\n      const resp = await fetch(`${APIURL}/${activity.name}category/browse`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'orderby': 'Category',\n          'searchfieldoperators': ['<>', '='],\n          'searchfields': ['Inactive', 'InventoryTypeId'],\n          'searchfieldtypes': ['Text', 'Text'],\n          'searchfieldvalues': ['T', `${inventoryType.id}`],\n          'searchseparators': [',']\n        })\n      })\n        .catch(err => console.log(err));\n      //\n      const categories = await resp.json();\n      let categoryList = {};\n      categories.Rows.forEach((category, i) => {\n        categoryList[category[2]] = {\n          id: category[2],\n          value: category[2],\n          name: category[3],\n          label: category[3],\n          index: i\n        }\n      });\n      return categoryList;\n    } else {\n      return undefined;\n    }\n  }\n\n  getCredentials = () => {\n    fetch(`${APIURL}/jwt`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        UserName: 'joshua',\n        Password: 'icardius'\n      })\n    })\n      .then(response => response.json())\n      .then(res => {\n        console.log(\"api credentials:\",res);\n        this.setState({ credentials: res });\n      })\n      .catch((err, res) => { console.log(err, \"response:\", res) });\n  }\n\n  getInventory = async () => {\n    const { warehouse, activity, inventoryType, category, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/search`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'CurrencyId': '0000000E',\n          'WarehouseId': warehouse.id,\n          'AvailableFor': activity.code,\n          'InventoryTypeId': inventoryType.id,\n          'CategoryId': category.id,\n          'Classifiction': '',\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'HideInventoryWithZeroQuantity': true,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const inventory = await resp.json();\n      console.log(\"loaded inventory:\", inventory);\n      return inventory;\n    } else {\n      return null;\n    }\n  }\n\n  getAccessories = async (parentId) => {\n    const { warehouse, activity, inventoryType, category, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/accessories`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'Lineage': parentId,\n          'WarehouseId': warehouse.id,\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const accessories = await resp.json();\n      console.log(\"loaded accessories:\", accessories);\n      return accessories;\n    } else {\n      return null;\n    }\n  }\n\n  getInventoryTypes = async (filter) => {\n    const { credentials, activity, warehouse } = this.state;\n    const resp = await fetch(`${APIURL}/inventorytype/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'OrderBy',\n        'searchfieldoperators': ['<>', \"=\"],\n        'searchfields': ['Inactive', activity.label],\n        'searchfieldtypes': ['Text', 'Boolean'],\n        'searchfieldvalues': ['T', true]\n      })\n    })\n      .catch(err => console.log(err));\n    //\n    const types = await resp.json();\n    let inventoryTypeList = {};\n    types.Rows.forEach((type, i) => {\n      inventoryTypeList[type[0]] = {\n        id: type[0],\n        value: type[0],\n        name: type[1],\n        label: type[1],\n        index: i\n      }\n    });\n    return inventoryTypeList;\n  }\n\n  getWarehouses = async (filter) => {\n    const resp = await fetch(`${APIURL}/warehouse/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.state.credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'Warehouse',\n        'searchfieldoperators': ['<>'],\n        'searchfields': ['Inactive'],\n        'searchfieldtypes': ['Text'],\n        'searchfieldvalues': ['T']\n      })\n    })\n      .catch(err => console.log(err));\n\n    const warehouses = await resp.json();\n    let warehouseList = {};\n    warehouses.Rows.forEach((warehouse, i) => {\n      warehouseList[warehouse[0]] = {\n        id: warehouse[0],\n        value: warehouse[0],\n        name: warehouse[1],\n        label: warehouse[1],\n        code: warehouse[2],\n        index: i\n      }\n    })\n    return warehouseList;\n  }\n\n  setMainModal = (modalHTML) => {\n    this.setState({ mainModal: modalHTML });\n  }\n\n  setCategory = (e) => {\n    if (!e) {\n      console.log(\"category not set\");\n    } else {\n      this.setState({ category: e });\n    }\n  }\n\n  setDates = (dates) => {\n    const [start, end] = dates;\n    const quotePeriod = this.getNumberOfDays(start, end);\n    this.setState({ startDate: start, endDate: end, quotePeriod: quotePeriod });\n  }\n\n  setInventoryType = (e) => {\n    if (!e) {\n      console.log(\"inventoryType not set\");\n    } else {\n      this.setState({ inventoryType: e, category: null});\n    }\n  }\n\n  setActivity = (e) => {\n    this.setState({ activity: e, inventoryType: null });\n  }\n\n  setWarehouse = (e) => {\n    if (!e) {\n      console.log(\"warehouse not set\");\n    } else {\n      this.setState({ warehouse: e });\n    }\n  }\n\n  submitModal = () => {\n    const modalHTML =\n      <SubmitForm\n        submit={this.submitQuote}\n        cancel={() => this.setMainModal(null)}\n      />\n    this.setMainModal(modalHTML);\n  }\n\n  submitQuote = (formData) => {\n    console.log(formData);\n    const modalConfirmation =\n    <div className=\"modal-layer\">\n        <div className=\"modal\">\n          <div id=\"submitQuote\" className=\"modal-container\">\n            <div className=\"modal-header barlow\">\n              Confirmation\n            </div>\n            <div className=\"modal-body\" style={{padding:\"50px\"}}>\n              Quote Requested!\n            </div>\n            <div className=\"panel-buttons\">\n              <div className=\"text-button secondary dim\"onClick={() => this.setMainModal(null)}><i>do_disturb</i><span>Close</span></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-backdrop abs\" onClick={() => this.setMainModal(null)}></div>\n      </div>\n    \n    this.setState({\n      route: \"catalog\",\n      mainModal: modalConfirmation,\n      activity: ACTIVITYLIST[0],\n      inventoryType: null,\n      category: null,\n      subcategory: null,\n      cartList: {},\n      startDate: new Date(),\n      endDate: new Date(),\n      quotePeriod: 1,\n      cartMode: \"out\"\n    })\n  }\n\n  // checkAvailability = (inventoryId, start, end) => {\n  //   fetch(`${APIURL}/inventoryavailability/getinventoryavailability`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Authorization': `Bearer ${this.state.credentials.access_token}`,\n  //       'content-type': 'application/json'\n  //     },\n  //     body: {\n  //       InventoryId: inventoryId,\n  //       Warehouse: this.state.warehouse,\n  //       FromDate: start,\n  //       ToDate: end\n  //     }\n  //   })\n  // }\n\n  showColorsModal = () => {\n    this.setState({ showColorsModal: !this.state.showColorsModal });\n  }\n\n  setColors = (colors) => {\n    Object.keys(colors).forEach(color => {\n      colors[color].contrast = \"black\";\n      colors[color].max = \"0%\";\n      colors[color].min = \"100%\";\n      const { hue, lum } = colors[color];\n      if (lum < 40) {\n        colors[color].contrast = \"white\";\n        colors[color].max = \"100%\";\n        colors[color].min = \"0%\";\n      } else if (lum < 70) {\n        if (hue < 45 || hue > 185) {\n          colors[color].contrast = \"white\";\n          colors[color].max = \"100%\";\n          colors[color].min = \"0%\";\n        }\n      }\n    })\n    this.setState({ colors: colors });\n  }\n\n  renderColors = () => {\n    const { colors } = this.state;\n    Object.keys(colors).forEach(color => {\n      document.body.style.setProperty(`--${color}-hue`, colors[color].hue);\n      document.body.style.setProperty(`--${color}-sat`, colors[color].sat + \"%\");\n      document.body.style.setProperty(`--${color}-lum`, colors[color].lum + \"%\");\n      document.body.style.setProperty(`--${color}-contrast`, colors[color].contrast);\n      document.body.style.setProperty(`--${color}-max`, colors[color].max);\n      document.body.style.setProperty(`--${color}-min`, colors[color].min);\n    })\n  }\n\n  toggleCart = (mode) => {\n    const { cartMode } = this.state;\n    let newMode = undefined;\n    if (typeof mode === \"string\") {\n      newMode = mode;\n    } else {\n      newMode = cartMode === \"in\" ? \"out\" : \"in\";\n    }\n    this.setState({ cartMode: newMode });\n  }\n\n  getNumberOfDays = (start, end) => {\n    const d1 = new Date(start);\n    const d2 = new Date(end);\n    const oneDay = 1000 * 60 * 60 * 24;\n    const diffInTime = d2.getTime() - d1.getTime();\n    const diffInDays = Math.round(diffInTime / oneDay);\n    return diffInDays + 1;\n  }\n\n  componentDidMount() {\n    this.setColors(this.state.colors);\n    this.getCredentials();\n  } \n\n  render() {\n    const { route, mainModal, warehouse, activity, inventoryType, category, subcategory, startDate, endDate, quotePeriod, cartList, cartMode, showColorsModal, colors } = this.state;\n    //console.log(\"App render with state:\", this.state);\n    //\n    let headerSection, colorsModal, paramColumn, catalogColumn, cartColumn, mainApp = undefined;\n    //\n\n    this.renderColors();\n    const { primary, secondary, background } = colors;\n    //\n    switch (route) {\n      case 'home':\n        headerSection = \n        <div className=\"header-banner\">\n          <div className=\"banner-content\">\n            <h1>Welcome!</h1>\n          </div>\n          <div className=\"banner-background\">\n            <img src=\"https://h7f7z2r7.stackpathcdn.com/sites/default/files/images/articles/blakcstonemain.jpg\"/>\n          </div>\n        </div>\n\n        catalogColumn =\n        <div>\n          \n        </div>\n        break;\n      case 'catalog':\n        if (this.state.credentials) {\n          switch (this.state.credentials.statuscode) {\n            case 0:\n              colorsModal = showColorsModal ? <Colorz colors={colors} setColors={this.setColors} /> : \"\";\n              paramColumn =\n                <div className=\"column left\" style={{ color: primary.contrast, borderColor: primary.contrast }}>\n                  <div className=\"column-header param-set\">\n                    <h1><i>tune</i>PARAMETERS</h1>\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperDate\n                      startDate={startDate}\n                      endDate={endDate}\n                      mode=\"start\"\n                      setDates={this.setDates}\n                      textColor={primary.contrast}\n                    />\n                    <SuperDate\n                      startDate={startDate}\n                      endDate={endDate}\n                      mode=\"end\"\n                      setDates={this.setDates}\n                      textColor={primary.contrast}\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <RadioButton\n                      name=\"Activity Type\"\n                      options={ACTIVITYLIST}\n                      selected={activity.name}\n                      action={this.setActivity}\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"warehouse\"\n                      loader={this.getWarehouses}\n                      action={this.setWarehouse}\n                      reloadOn={[activity]}\n                      placeholder=\"Select a Warehouse\"\n                      searchable={false}\n                      textColor={primary.contrast}\n                      preload\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"Inventory Type\"\n                      loader={this.getInventoryTypes}\n                      action={this.setInventoryType}\n                      reloadOn={[activity, warehouse]}\n                      placeholder=\"Select an Inventory Type\"\n                      searchable={true}\n                      textColor={primary.contrast}\n                      value={inventoryType}\n                    // preload\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"category\"\n                      loader={this.getCategories}\n                      action={this.setCategory}\n                      reloadOn={[activity, warehouse, inventoryType]}\n                      placeholder=\"Select a Category\"\n                      searchable={true}\n                      textColor={primary.contrast}\n                      value={category}\n                    />\n                  </div>\n                </div>\n  \n              catalogColumn =\n                <div className=\"column center\" style={{ color: background.contrast, borderColor: background.contrast }}>\n                  <div className=\"column-header param set\">\n                    <h1><i>menu_book</i>{activity.label.toUpperCase()} CATALOG</h1>\n                  </div>\n                  <Catalog\n                    loader={this.getInventory}\n                    getAccessories={this.getAccessories}\n                    activity={activity}\n                    warehouse={warehouse}\n                    inventoryType={inventoryType}\n                    category={category}\n                    startDate={startDate}\n                    endDate={endDate}\n                    addItemToCart={this.addItemToCart}\n                    cart={cartList}\n                  />\n                </div>\n  \n              cartColumn =\n                <div className=\"column right\">\n                  <Cart\n                    cartMode={cartMode}\n                    cartList={cartList}\n                    activityList={ACTIVITYLIST}\n                    quotePeriod={quotePeriod}\n                    updateCart={this.addItemToCart}\n                    clearCart={this.clearCart}\n                    submitQuote={this.submitModal}\n                    toggleCart={this.toggleCart}\n                  />\n                </div>\n              \n              mainApp =\n                <article>\n                  {colorsModal}\n                  {mainModal}\n                  <div className=\"body-margin\"></div>\n                  <div className=\"body-main\">\n                    {paramColumn}\n                    {catalogColumn}\n                  </div>\n                  <div className=\"body-margin\">\n                    {cartColumn}\n                  </div>\n                </article>\n              break;\n            case undefined:\n              catalogColumn = <div className=\"modal\"><Loader textColor={background.contrast}/></div>\n              break;\n            default:\n              console.log(\"there was a problem loading your credentials\");\n          }\n        } else {\n          mainApp = <div className=\"modal abs\"><Loader input=\"CONNECTING TO DATABASE\" textColor={background.contrast}/></div>\n        }\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          <nav>\n            <div className=\"margin-left\">\n\n            </div>\n            <div className=\"main-nav\">\n              <ul style={{color: primary.contrast}}>\n                <li onClick={() => this.changeRoute('catalog')}>Get a Quote</li>\n                <li>Call an Agent</li>\n                <li onClick={this.showColorsModal}>Our Website</li>\n                <li>News</li>\n              </ul>\n            </div>\n            <div className=\"margin-right\">\n            </div>\n          </nav>\n          {headerSection}\n        </header>\n        {mainApp}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}