{"version":3,"sources":["loader.js","Components/catalogContainer.js","Components/superInput.js","Components/catalogItem.js","Components/radio.js","Components/catalog.js","Components/cartContainer.js","Components/cartItem.js","Components/cart.js","Components/superSelect.js","Components/superDate.js","Components/submitForm.js","Components/PictureModal.js","Components/Colorz.js","Components/noteModal.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","props","message","input","className","style","color","textColor","CatalogContainer","loadAccessories","a","item","childItems","contentIsLoaded","subRowCount","length","completeToggle","toggleExpanded","isExpanded","updateSubRows","rootParent","rowIndex","address","forceUpdate","console","log","parent","subAddress","childRowCount","state","this","header","cart","picPreview","loader","displayMode","undefined","rowTab","onClick","accessoryContent","showRows","Object","keys","forEach","rowSet","indexOf","map","i","type","height","React","Component","SuperInput","changeMode","newMode","updateValue","stateValue","setState","mode","value","changeValue","e","target","enterValue","key","handleLoad","select","inputDisplay","onFocus","onBlur","onChange","onKeyPress","autoFocus","CatalogItem","itemContentForDisplay","cartQ","qPlus","qMinus","available","quantity","actual","imageSource","imgSrc","description","src","optional","isOption","updateCartQuantity","q","rate","toFixed","generateDisplayContent","rowOutput","RadioButton","checkMe","v","action","name","options","selected","label","option","checkedVal","icon","DISPLAYMODEOPTIONS","Catalog","loadInventory","catalogInventory","search","searchField","setDisplayMode","prevProps","_","isEqual","warehouse","inventoryType","category","searchBar","catalogDisplay","getAccessories","activity","addItemToCart","subCategory","catalogContent","filteredInventory","filter","toLowerCase","includes","loadMessage","placeholder","CartContainer","toggle","collapsedBody","collapseBody","isOnlyChild","branchTier","parentItem","items","branchGroup","branchTierSubTotal","branchChain","push","headerBarContent","displayNote","note","content","CartItem","group","itemQuantity","Cart","cartList","cartBody","cartSubTotal","topTier","grandTotal","quotePeriod","isEmpty","flex","addNote","cartSwitchTotal","submitButton","submitQuote","toggleCart","cartMode","display","clearCart","SuperSelect","getOptions","values","reloadOn","preload","advPlaceholder","searchable","customStyles","provided","isSelected","control","backgroundColor","padding","opacity","fontStyle","indicatorSeparator","dropdownIndicator","isLoading","selectProps","singleValue","loadingIndicator","valueContainer","optionsList","labelName","substring","toUpperCase","itemid","styles","classNamePrefix","isSearchable","Select","SuperDate","startDate","endDate","setDates","dates","selectsRange","inline","date","selectsStart","selectsEnd","minDate","DatePicker","SubmitForm","submit","newState","formFault","formField","blank","updateForm","prevState","id","project","contact","email","phone","width","field","cancel","PictureModal","title","HSLToHex","h","s","l","c","Math","abs","x","m","r","g","b","round","toString","Colorz","changeHandler","colorSet","colors","setColors","pickedColor","H","cmin","min","cmax","max","delta","hue","sat","lum","HexToHSL","newColors","clone","toggleColorControls","show","colorModal","primary","htmlFor","secondary","background","NoteModal","APIURL","ACTIVITYLIST","code","App","popCart","accessories","Promise","all","acc","quantizeCartItem","adjustedQ","fraction","default","ceil","noteModal","setMainModal","join","mainModal","changeRoute","route","getCategories","credentials","fetch","method","headers","access_token","body","JSON","stringify","catch","err","resp","json","categories","categoryList","Rows","index","getSubCategories","subcategories","subcategoryList","subcategory","getCredentials","UserName","Password","then","response","res","getInventory","loadedInventory","inventory","row","itemObjectBuilder","inventoryId","loadedAccessories","defaultQuantity","itemObject","details","iCode","isShort","lineage","getInventoryTypes","types","inventoryTypeList","getWarehouses","warehouses","warehouseList","picHTML","modalHTML","setCategory","setSubCategory","start","end","getNumberOfDays","setInventoryType","setActivity","setWarehouse","submitModal","formData","modalConfirmation","Date","contrast","renderColors","document","setProperty","d1","diffInTime","getTime","customer","showColorModal","parseInt","getComputedStyle","getPropertyValue","slice","headerSection","colorsModal","paramColumn","catalogColumn","cartColumn","showColorsModal","mainApp","statuscode","borderColor","activityList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f9eb8ee.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = (props) => {\n    const message = props.input ? props.input : \"LOADING\";\n    return (\n        <div className=\"loader-blip\" style={{color: props.textColor}}>\n            <div className=\"loader-text\">{message}</div>\n            <ul className=\"blips\">\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react';\nimport CatalogItem from './catalogItem';\nimport Loader from '../loader';\nimport _ from 'lodash';\n\nclass CatalogContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.childItems = null;\n        this.contentIsLoaded = false;\n        this.subRowCount = 1;\n        this.isExpanded = false\n        this.rowIndex = {};\n    }\n\n    loadAccessories = async () => {\n        this.childItems = await this.props.item.loadAccessories();\n        this.contentIsLoaded = true;\n        this.subRowCount = this.childItems.length;\n        this.completeToggle();\n    }\n\n    toggleExpanded = async () => {\n        this.isExpanded = !this.isExpanded;\n        if (!this.contentIsLoaded) {\n            this.loadAccessories();\n        }\n        this.completeToggle();\n    }\n    \n    completeToggle = () => {\n        const { item, updateSubRows } = this.props;\n        if (this.props.rootParent) {\n            this.rowIndex[item.address] = this.subRowCount;\n            this.forceUpdate();\n        } else {\n            console.log(\"parent address:\", item.parent.address, \"isExpanded:\", this.isExpanded, \"subRowCount:\", this.subRowCount);\n            updateSubRows(item.address, (this.isExpanded ? this.subRowCount : 0));\n        }\n    }\n\n    updateSubRows = (subAddress, childRowCount) => {\n        this.rowIndex[subAddress] = childRowCount;\n        this.forceUpdate();\n    }\n\n    render() {\n        const { item, header, cart, loader, picPreview, displayMode } = this.props;\n        let rowIndex, updateSubRows = undefined;\n        if (this.props.rootParent) {\n            updateSubRows = this.updateSubRows;\n            rowIndex = this.rowIndex;\n        } else {\n            updateSubRows = this.props.updateSubRows;\n            rowIndex = this.props.rowIndex\n        }\n        //\n        const rowTab = (displayMode === \"table\" ? <div className={`row-expander btn ${(this.isExpanded ? \"expanded\" : \"collapsed\")}`} onClick={this.toggleExpanded}><i>{(this.isExpanded ? \"expand_less\" : \"expand_more\")}</i></div> : <div className=\"row-expander\"></div>)\n        //\n        let accessoryContent = undefined;\n        let showRows = 1;\n        if (this.isExpanded) {\n            Object.keys(rowIndex).forEach(rowSet => {\n                if (rowSet.indexOf(item.address) === 0) {\n                    showRows += rowIndex[rowSet];\n                }\n            })\n            accessoryContent = <Loader />;\n            if (this.contentIsLoaded) {\n                accessoryContent = this.childItems.map((item, i) => {\n                    return (\n                        <div key={i} className={`catalog-item-container ${item.type} ${(this.isExpanded ? \"expanded\" : \"collapsed\")}`}>\n                            <CatalogItem\n                                item={item}\n                                cart={cart}\n                                updateSubRows={updateSubRows}\n                                rootParent={false}\n                                rowIndex={rowIndex}\n                                picPreview={picPreview}\n                                displayMode={displayMode}\n                            />\n                        </div>\n                    )\n                })\n            }\n        } else {\n            Object.keys(rowIndex).forEach(rowSet => {\n                if (rowSet.indexOf(item.address) === 0) {\n                    rowIndex[rowSet] = 0;\n                }\n            })\n            showRows = 1;\n        }\n        //style={{ height: (this.subRowCount * 50) + \"px\" }} -- in parent div (below) for animated row expansion\n        return (\n            <div className=\"collapsible-container\" style={{ height: ((showRows * 52) + (this.isExpanded ? showRows * 2 : 0)) + \"px\" }}>  \n                <div className=\"container-header\">\n                    {rowTab}\n                    {header}\n                </div>\n                <div className=\"container-accessories\">\n                    {accessoryContent}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CatalogContainer;","import React from 'react';\nimport _ from 'lodash';\n\nclass SuperInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"read\",\n            stateValue: this.props.value\n        }\n    }\n\n    changeMode = (newMode) => {\n        switch (newMode) {\n            case \"read\":\n                this.props.updateValue(this.state.stateValue);\n                this.setState({ mode: \"read\" });\n                break;\n            case \"write\":\n                this.setState({ mode: \"write\", stateValue: this.props.value });\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeValue = (e) => {\n        this.setState({ stateValue: e.target.value })\n    }\n\n    enterValue = (e) => {\n        if (e.key === \"Enter\") {\n            this.changeMode(\"read\");\n        }\n    }\n\n    handleLoad = (e) => {\n        e.target.select();\n    }\n\n    render() {\n        const { mode, stateValue } = this.state;\n        const { value } = this.props;\n        let inputDisplay = undefined;\n        switch (mode) {\n            case \"read\":\n                inputDisplay =\n                    <div className=\"super-input\">{value}</div>\n                break;\n            case \"write\":\n                inputDisplay =\n                    <input className=\"super-input\" type=\"number\" onFocus={this.handleLoad} onBlur={() => this.changeMode(\"read\")} onChange={this.changeValue} onKeyPress={this.enterValue} value={stateValue} autoFocus/>\n        }\n        return (\n            <div className=\"super-input-container\" onClick={() => this.changeMode(\"write\")}>\n                {inputDisplay}\n            </div>\n        )\n    }\n}\n\nexport default SuperInput;","import React from 'react';\nimport CatalogContainer from './catalogContainer';\nimport SuperInput from './superInput';\n\nconst CatalogItem = ({ item, cart, loader, updateSubRows, rowIndex, rootParent, picPreview, displayMode }) => {\n\n    const generateDisplayContent = () => {\n        //enable/disable PLUS and MINUS buttons\n        let cartQ = 0;\n        let qPlus = false;\n        let qMinus = false;\n        if (item.available > 0) {\n            if (cart[item.address]) {\n                cartQ = cart[item.address].quantity.actual;\n                qMinus = cartQ > 0 ? true : false;\n                if (item.available > cartQ) {\n                    qPlus = true;\n                }\n            } else {\n                qPlus = true;\n            }\n        }\n        //handleimage preview\n        let imageSource = undefined;\n        if (item.imgSrc) {\n            imageSource = <div className=\"item-image-thumbnail\" onClick={() => picPreview(item.imgSrc, item.description)}><img src={item.imgSrc}/></div>\n        } else {\n            imageSource = <div className=\"item-image-thumbnail\"><i>cancel_presentation</i><br/><span>No Image</span></div>\n        }\n\n        let optional = \"\";\n        if (item.parent) {\n            optional = item.isOption ? \"optional\" : \"required\"\n        }\n\n        return (\n            <ul className=\"catalog-item-elements\">\n                <li className={`item-segment item-quantity ${optional}`}>\n                    <div className=\"quantity-control\">\n                        <div className={`btn${qMinus ? \"\" : \" inactive\"}`} onClick={(qMinus ? () => item.updateCartQuantity(cartQ - 1) : null)}>\n                            <i>remove</i>\n                        </div>\n                        <div className=\"quantity-count\">\n                            <SuperInput\n                                value={cartQ}\n                                updateValue={(q) => item.updateCartQuantity(q)}\n                            />\n                        </div>\n                        <div className={`btn${qPlus ? \"\" : \" inactive\"}`} onClick={(qPlus ? () => item.updateCartQuantity(cartQ + 1) : null)}>\n                            <i>add</i>\n                        </div>\n                    </div>\n                </li>\n                <li className=\"item-segment item-image\">{imageSource}</li>\n                <li className=\"item-segment item-description\"><div className=\"row-description\">{item.description}</div></li>\n                <li className=\"item-segment item-rate numeric\"><div className=\"grid-label\">Rate:</div><div>$ {item.rate.toFixed(2)}</div></li>\n                {/* <li className=\"item-segment numeric\"><div className=\"grid-label\">Available:</div><div>{item.available}</div></li> */}\n            </ul>\n        )\n    }\n\n    const itemContentForDisplay = generateDisplayContent();\n    let rowTab = null;\n    let rowOutput = undefined;\n    switch (item.type) {\n        case \"ITEM\":\n        case \"ACCESSORY\":\n            rowTab = <div className=\"row-expander\"></div>\n            rowOutput = itemContentForDisplay\n            break;\n        default:\n            rowOutput =\n                <CatalogContainer\n                header={itemContentForDisplay}\n                item={item}\n                cart={cart}\n                updateSubRows={updateSubRows}\n                rowIndex={rowIndex}\n                rootParent={rootParent}\n                picPreview={picPreview}\n                displayMode={displayMode}\n                />\n            break;\n    }\n    return (\n        <div className=\"catalog-item\">\n            { rowTab }\n            { rowOutput }\n        </div>\n    )\n}\n\nexport default CatalogItem;","import React from \"react\";\n\nclass RadioButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    checkMe = (v) => {\n        this.props.action(v);\n    }\n\n    render() {\n        const { name, options, selected } = this.props;\n        if (options.length > 0) {\n            let label = undefined;\n            return (\n                <div className=\"radio-set\">\n                    <div className=\"super-label\">{name}</div>\n                    <ul className=\"radio-list\">\n                        {\n                            options.map((option, i) => {\n                                const checkedVal = selected === option.name ? \"checked\" : \"\";\n                                if (option.icon) {\n                                    label = <i className=\"\">{option.icon}</i>\n                                } else {\n                                    label = option.label\n                                }\n                                return (\n                                    \n                                    <li\n                                        key={i}\n                                        onClick={() => this.checkMe(option)}\n                                        className={`radio-option ${checkedVal}`}\n                                    >\n                                        {label}\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n        } else {\n            return <div className=\"radio-set\"></div>\n        }\n    }\n}\n\nexport default RadioButton;","import React from 'react';\nimport _ from 'lodash';\nimport CatalogItem from './catalogItem';\nimport RadioButton from './radio';\nimport Loader from '../loader';\n\nconst DISPLAYMODEOPTIONS = [\n    {\n        name: \"grid\",\n        value: \"G\",\n        label: \"Grid\",\n        icon: \"calendar_view_month\"\n    },\n    {\n        name: \"table\",\n        value: \"T\",\n        label: \"Table\",\n        icon: \"reorder\"\n    }\n]\n\nclass Catalog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayMode: DISPLAYMODEOPTIONS[1],\n            catalogInventory: undefined,\n            searchField: \"\"\n        }\n        this.mode = \"waiting\";\n    }\n\n    loadInventory = async () => {\n        this.mode = \"loading\";\n        const catalogInventory = await this.props.loader();\n        // console.log(\"loaded:\", catalogInventory);\n        if (catalogInventory) {\n            this.mode = \"display\"\n            this.setState({ catalogInventory: catalogInventory });\n        }\n    }\n\n    search = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    setDisplayMode = (e) => {\n        this.setState({ displayMode: e })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!_.isEqual(this.props, prevProps)) {\n            console.log(\"a catalog prop has changed\")\n            \n            this.loadInventory();\n        }    \n    }\n    componentDidMount() {\n        console.log(this.props);\n        const { warehouse, inventoryType, category } = this.props;\n        if (warehouse && inventoryType && category) {\n            this.loadInventory();\n        }\n    }\n\n    render() {\n        const { displayMode, catalogInventory, searchField } = this.state;\n        const { cart, getAccessories, addItemToCart, activity, warehouse, inventoryType, category, subCategory, picPreview } = this.props;\n        let searchBar, catalogDisplay, catalogContent = undefined;\n\n        let address = undefined;\n        if (category === null || inventoryType === null || warehouse === null || activity === null) {\n            this.mode = \"waiting\";\n        }\n        \n        switch (this.mode) {\n            case \"waiting\":\n                catalogDisplay = <div className=\"modal-anchor\"><div className=\"modal-content barlow\">AWAITING PARAMETERS</div></div>\n                break;\n            case \"loading\":\n                catalogDisplay = <div className=\"modal-anchor\"><div className=\"modal-content barlow\"><Loader/></div></div>\n                break;\n            case \"display\":\n                address = `${activity.name}~${warehouse.name}~${inventoryType.name}~${category.name}` + (subCategory ? `~${subCategory.name}` : \"\");\n                const filteredInventory = catalogInventory.filter(item => {\n                    return item.description.toLowerCase().includes(searchField.toLowerCase())\n                })\n                let loadMessage = \"\";\n                if (filteredInventory.length > 0) {\n                    loadMessage = null;\n                } else {\n                    loadMessage = <div className=\"modal-anchor\"><div className=\"modal-content barlow\">No inventory items match this criteria</div></div>\n                }\n                searchBar =\n                <div className=\"search-field\">\n                    <input type=\"text\" onChange={this.search} value={searchField} placeholder=\"Search...\" />\n                    <RadioButton\n                        name=\"Display Mode\"\n                        options={DISPLAYMODEOPTIONS}\n                        selected={displayMode.name}\n                        action={this.setDisplayMode}\n                    />\n                </div>\n                catalogContent = filteredInventory.map((item, i) => {\n                    return (\n                        <div key={i} className={`catalog-item-container ${item.type}`}>\n                            <CatalogItem\n                                item={item}\n                                cart={cart}\n                                loader={getAccessories}\n                                rootParent={true}\n                                picPreview={picPreview}\n                                displayMode={displayMode.name}\n                            />\n                        </div>\n                    )\n                })\n                switch (displayMode.name) {\n                    case \"table\":\n                        catalogDisplay = \n                        <div className=\"dbw-table\">\n                            <div className=\"dbw-thead\">\n                                <ul className=\"row-header\">\n                                    <li className=\"row-expander\"></li>\n                                    <li className=\"item-segment item-quantity\">Quantity</li>\n                                    <li className=\"item-segment item-image\">Image</li>\n                                    <li className=\"item-segment item-description\">Item</li>\n                                    <li className=\"item-segment item-rate\">Rate</li>\n                                    {/* <li className=\"item-segment\">Available</li> */}\n                                </ul>\n                            </div>\n                            <div className=\"dbw-tbody\">\n                                {catalogContent}\n                                {loadMessage}\n                            </div>\n                        </div>\n                        break;\n                    case \"grid\":\n                        catalogDisplay =\n                            <div className=\"dbw-grid\">\n                                {catalogContent}\n                                {loadMessage}\n                            </div>\n                        break;\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <section className=\"catalog\">\n                {searchBar}\n                {catalogDisplay}\n            </section>\n        )\n    }\n}\n\nexport default Catalog;","import React from 'react';\nimport CartItem from './cartItem';\nimport SuperInput from './superInput';\n\nclass CartContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsedBody: false\n        }\n    }\n\n    toggle = () => {\n        const { collapsedBody } = this.state;\n        this.setState({ collapsedBody: !collapsedBody });\n    }\n\n    componentDidMount() {\n        const {collapseBody} = this.props;\n        if (collapseBody) {\n            this.setState({ collapsedBody: collapseBody });\n        }\n    }\n\n    render() {\n        const { collapsedBody } = this.state;\n        const { isOnlyChild, branchTier, label, parentItem, items } = this.props;\n        const collapseBtn = collapsedBody ? \"drag_handle\" : \"view_day\";\n\n        let branchGroup = {}\n        let branchTierSubTotal = 0;\n        items.forEach(item => {\n            if (item.branchChain.length === 5 || item.isOption) branchTierSubTotal += item.quantity.actual * item.rate;\n            if (!branchGroup[item.branchChain[branchTier]]) {\n                branchGroup[item.branchChain[branchTier]] = [];\n            }\n            branchGroup[item.branchChain[branchTier]].push(item);\n        })\n\n        let headerBarContent = undefined;\n        if (branchTier < 5) {\n            headerBarContent =\n                <ul className=\"branch-header\">\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_more\" : \"expand_less\"}</i></li>\n                    <li className=\"cart-col name\">{label}</li>\n                    <li className=\"cart-col rate numeric\">{branchTierSubTotal.toFixed(2)}</li>\n                </ul>\n        } else {\n            headerBarContent =\n                <ul className={`kit-complete-header ${parentItem.parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_more\" : \"expand_less\"}</i></li>\n                    <li className=\"cart-col quantity numeric\">\n                        <div className=\"super-input-container\">\n                            <SuperInput\n                                value={parentItem.quantity.actual}\n                                updateValue={(q) => parentItem.updateCartQuantity(q)}\n                            />\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\" onClick={parentItem.displayNote}>\n                        {(parentItem.note ? <i>sticky_note_2</i> : \"\")}\n                        {parentItem.description}\n                    </li>\n                    <li className=\"cart-col rate numeric\">{parentItem.rate.toFixed(2)}</li>\n                </ul>\n        }\n        return (\n            <div key={label} className={`collapser-container${(parentItem ? \" kit-complete\" : \"\")}${(branchTier < 5 ? \" branch-container\" : \"\")}${isOnlyChild ? \" hidden\" : \" show\"}`}>\n                <div className={`collapser-header`}>\n                    {headerBarContent}\n                </div>\n                <ul className={`content-container ${collapsedBody ? \"hidden\" : \"show\"}`}>\n                    {\n                        Object.keys(branchGroup).map(address => {\n                            return (\n                                <CartItem\n                                    branchTier={branchTier + 1}\n                                    label={address}\n                                    content={branchGroup[address]}\n                                    isOnlyChild={Object.keys(branchGroup).length === 1 && branchTier < 4}\n                                />\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default CartContainer;","import React from 'react';\nimport CartContainer from './cartContainer';\nimport SuperInput from './superInput';\n\nconst CartItem = (props) => {\n    const { branchTier, label, content, isOnlyChild } = props;\n\n    let parentItem = undefined;\n    if (content.length > 1 || branchTier < 5) {\n        let group = [];\n        content.forEach(item => {\n            if (item.branchChain.length > branchTier) {\n                group.push(item);\n            } else {\n                parentItem = item;\n            }\n        })\n        return (\n            <div key={label} className={`cart-item${(branchTier < 5 ? \" branch\" : \"\")}${isOnlyChild ? \" hide\" : \" show\"}`}>\n                <CartContainer\n                    branchTier={branchTier}\n                    label={label}\n                    parentItem={parentItem}\n                    items={group}\n                    isOnlyChild={isOnlyChild}\n                />\n            </div>\n        )\n    } else {\n        let itemQuantity = content[0].quantity.actual;\n        if (!content[0].parent || content[0].parent && content[0].isOption) {\n            itemQuantity =\n                <SuperInput\n                    value={content[0].quantity.actual}\n                    updateValue={(q) => content[0].updateCartQuantity(q)}\n                />\n        }\n        return (\n            <div key={label} className=\"cart-item\">\n                <ul className={`${content[0].isOption ? \"option\" : \"\"} ${content[0].parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"cart-col bullet\">•</li>\n                    <li className=\"cart-col quantity\">\n                        <div className=\"super-input-container\">\n                            {itemQuantity}\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\" onClick={() => content[0].displayNote()}>\n                        {(content[0].note != \"\" ? <i>sticky_note_2</i> : \"\")}\n                        <div>{content[0].description}</div>\n                    </li>\n                    <li className=\"cart-col rate numeric\">{content[0].rate.toFixed(2)}</li>\n                </ul>\n            </div>\n        )  \n    }\n\n}\n\nexport default CartItem;","import React from 'react';\nimport RadioButton from './radio';\nimport CartItem from './cartItem';\nimport _ from 'lodash';\n\nconst Cart = (props) => {\n    const { cartList } = props;\n    let cartBody = undefined;\n    let cartSubTotal = 0;\n    let topTier = {}\n    Object.keys(cartList).forEach(key => {\n        const item = cartList[key];\n        if (item.branchChain.length === 5 || item.isOption) cartSubTotal += item.rate * item.quantity.actual;\n        if (!topTier[item.branchChain[0]]) {\n            topTier[item.branchChain[0]] = [];\n        }\n        topTier[item.branchChain[0]].push(item);\n    })\n    const grandTotal = cartSubTotal * props.quotePeriod;\n    \n    if (!_.isEmpty(cartList)) {\n        cartBody = \n        <div className=\"dbw-table\">\n            <div className=\"dbw-thead\">\n                <ul className=\"dbw-header\">\n                    <li className=\"cart-col spacer\"></li>\n                    <li className=\"cart-col quantity numeric\">Q</li>\n                    <li className=\"cart-col name\">Item</li>\n                    <li className=\"cart-col rate numeric\">Rate</li>\n                </ul>\n            </div>\n            <div className=\"dbw-tbody\">\n                {\n                    Object.keys(topTier).map(key => {\n                        \n                        return (\n                            <CartItem\n                                branchTier={1}\n                                label={key}\n                                content={topTier[key]}\n                                isOnlyChild={Object.keys(topTier).length === 1}\n                                addNote={props.addNote}\n                            />\n                        )\n                    })\n                }\n            </div>\n        </div>\n        \n        \n    } else {\n        cartBody = <div className=\"modal barlow\" style={{flex:1}}>Cart Empty</div>\n    }\n    const cartSwitchTotal = grandTotal > 0 ? grandTotal.toFixed(2) : \"\";\n    const submitButton = (Object.keys(cartList).length > 0 ? <div className=\"text-button\" onClick={props.submitQuote}><i>send</i><span>Submit Quote</span></div> : <div className=\"text-button disabled\" ><i>send</i><span>Submit Quote</span></div>);\n    \n    return (\n        <div>\n            <div className=\"slide-panel-switch barlow\" onClick={props.toggleCart}>\n                {\n                    props.cartMode === \"in\" ? <i>logout</i> : <div style={{display: \"flex\"}}><i>shopping_cart</i>{cartSwitchTotal}</div>\n                }\n            </div>\n            <div className={`cart slide-panel ${props.cartMode}`}>\n                <div className=\"column-header column-segment\">\n                    <h1><i>shopping_cart</i>CART</h1>\n                </div>\n                <div className=\"cart-contents column-segment\">\n                    {cartBody}\n                </div>\n                <div className=\"cart-summary column-segment barlow\">\n                    <div className=\"cart-summary-row\">\n                        <span>Daily Subtotal:</span>\n                        $\n                        {cartSubTotal.toFixed(2)}\n                    </div>\n                    <div className=\"cart-summary-row\">\n                        <span>Quote Duration</span>\n                        {props.quotePeriod} {(props.quotePeriod > 1 ? \"Days\" : \"Day\")}\n                    </div>\n                    <div className=\"cart-summary-row grand\">\n                        <span>Total:</span>\n                        $\n                        {(cartSubTotal * props.quotePeriod).toFixed(2)}\n                    </div>\n                </div>\n                <div className=\"panel-buttons\">\n                    <div className=\"text-button secondary dim\" onClick={props.clearCart}><i>delete_forever</i><span>Clear Cart</span></div>\n                    {submitButton}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;","import React from 'react';\nimport Select, { NonceProvider } from 'react-select';\nimport _ from 'lodash';\n\nclass SuperSelect extends Select {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"waiting\",\n            options: undefined\n        }\n    }\n\n    getOptions = async () => {\n        this.setState({ mode: \"loading\" });\n        const options = await this.props.loader(this.props.filter);\n        console.log(this.props.name, \"options\", options)\n        if (options) {\n            switch (Object.values(options).length) {\n                case 0:\n                    this.setState({ mode: \"empty\" })\n                    break;\n                case 1:\n                    Object.values(options).forEach(value => this.props.action(value));\n                default:\n                    this.setState({ mode: \"display\", options: options });\n            }\n        } else {\n            this.setState({mode: \"empty\"})\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!_.isEqual(this.props, prevProps)) {\n            if (this.props.reloadOn.includes(null)) {\n                this.setState({ mode: \"waiting\", options: undefined });\n            } else {\n                this.getOptions();\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.preload) {\n            this.getOptions();\n        }\n    }\n\n    render() {\n        const { mode, options } = this.state;\n        const { name, action, searchable, placeholder, value, textColor } = this.props;\n        const customStyles = {\n            option: (provided, state) => ({\n                ...provided,\n                color: state.isSelected ? 'white' : 'black',\n            }),\n            control: () => ({\n                backgroundColor: 'transparent',\n                display: 'flex',\n                padding: '25px'\n            }),\n            placeholder: () => ({\n                color: textColor,\n                opacity: 0.5,\n                fontStyle: 'italic'\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                backgroundColor: textColor\n            }),\n            dropdownIndicator: (provided, { selectProps: { isLoading }}) => ({\n                ...provided,\n                color: textColor,\n                opacity: isLoading ? 0.5 : 1,\n                \"&:hover\": {\n                    color: ''\n                },\n                padding: '0.5em 0 0.5em 1em'\n            }),\n            singleValue: () => ({\n                color: textColor,\n            }),\n            loadingIndicator: (provided) => ({\n                ...provided,\n                color: textColor\n            }),\n            valueContainer: (provided) => ({\n                ...provided,\n                padding: 0\n            })\n        }\n        //\n\n        //\n        let isLoading = true;\n        let advPlaceholder, optionsList = null;\n        const labelName = name.substring(0, 1).toUpperCase() + name.substring(1);\n        switch (mode) {\n            case \"empty\":\n                advPlaceholder = \"No Options\"\n                isLoading = false;\n                break;\n            case \"waiting\":\n                advPlaceholder = \"Awaiting Parameters...\";\n                break;\n            case \"loading\":\n                advPlaceholder = \"Loading Options...\";\n                break;\n            case \"display\":\n                advPlaceholder = placeholder;\n                isLoading = false;\n                optionsList = Object.keys(options).map(itemid => {\n                    return options[itemid];\n                })\n                break;\n            default:\n                break;\n        }\n        return (\n            <div className={`selector-set ${mode}`}>\n                <div className=\"super-label\">{labelName}</div>\n                <Select\n                    styles={customStyles}\n                    className={`selector ${name}-select`}\n                    classNamePrefix={`${name}-select`}\n                    isLoading={isLoading}\n                    options={optionsList}\n                    onChange={action}\n                    placeholder={advPlaceholder}\n                    isSearchable={searchable}\n                    value={value}\n                />  \n            </div>\n        )\n    }\n}\n\nexport default SuperSelect;","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass SuperDate extends DatePicker {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        \n    }\n\n    render() {\n        const { startDate, endDate, setDates, textColor } = this.props;\n        switch (this.props.mode) {\n            case \"combined\":\n                return (\n                    <div className={`date-selector`}>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={dates => setDates(dates)}\n                            startDate={startDate}\n                            endDate={endDate}\n                            selectsRange\n                            inline\n                        />\n                    </div>\n                )\n            case \"start\":\n                return (\n                    <div className={`date-selector ${textColor}`}>\n                        <div className=\"super-label\">Start</div>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={date => setDates([date, endDate])}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                        />\n                    </div>\n                )\n            case \"end\":\n                return (\n                    <div className={`date-selector ${textColor}`}>\n                        <div className=\"super-label\">End</div>\n                        <DatePicker\n                            selected={endDate}\n                            onChange={date => setDates([startDate, date])}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                        />\n                    </div>\n                )\n            default:\n        }\n    }\n}\n\nexport default SuperDate;","import React from 'react';\n\nclass SubmitForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: {label: \"Project\", value: \"\", blank: false, type: \"text\"},\n            contact: {label: \"Contact\", value: \"\", blank: false, type: \"text\"},\n            email: {label: \"Email\", value: \"\", blank: false, type: \"email\"},\n            phone: {label: \"Phone\", value: \"\", blank: false, type: \"text\"},\n            note: {label: \"Note\", value: \"\", blank: false, type: \"textarea\"}\n        }\n    }\n\n    submit = () => {\n        let newState = {}\n        let formFault = false;\n        Object.keys(this.state).forEach(formField => {\n            newState[formField] = this.state[formField];\n            if (newState[formField].value === \"\" && newState[formField].label != \"Note\") {\n                newState[formField].blank = true;\n                formFault = true;\n            }\n        })\n        if (formFault) {\n            this.setState(newState)\n        }else{\n            this.props.submit(this.state);\n        }\n    }\n\n    updateForm = (e) => {\n        console.log(e);\n        this.setState(prevState => ({ [e.target.id]: {...prevState[e.target.id], value: e.target.value} }));\n    }\n\n    render() {\n        return (\n            <div className=\"modal-layer\">\n                <div className=\"modal\">\n                    <div id=\"submitQuote\" className=\"modal-container\" style={{width: \"500px\"}}>\n                        <div className=\"modal-header barlow\">\n                            Request Quote\n                        </div>\n                        <div className=\"modal-body\">\n                            {\n                                Object.keys(this.state).map(key => {\n                                    const field = this.state[key];\n                                    return (\n                                        <div className={`input-set ${field.type}`}>\n                                            <div className=\"input-set-label\">{field.label}</div>\n                                            {\n                                                (field.type === \"textarea\" ? <textarea id={key} type={field.type} className={(field.blank ? \"fault\" : \"\")} onChange={(e) => this.updateForm(e)} value={field.value}/> : <input id={key} type={field.type} className={(field.blank ? \"fault\" : \"\")} onChange={(e) => this.updateForm(e)} value={field.value}/>)\n                                            }\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"panel-buttons\">\n                            <div className=\"text-button secondary dim\" onClick={this.props.cancel}><i>do_disturb</i><span>Cancel</span></div>\n                            <div className=\"text-button\" onClick={this.submit}><i>send</i><span>Submit</span></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-backdrop abs\" onClick={this.props.cancel}></div>\n            </div>\n        )\n    }\n}\n\nexport default SubmitForm;","import React from 'react';\n\nconst PictureModal = ({ src, title, cancel }) => {\n    console.log(\"we got this far\", src, title);\n    return (\n        <div className=\"modal-layer\">\n            <div className=\"modal\">\n                <div id=\"submitQuote\" className=\"modal-container\">\n                    <div className=\"modal-header barlow\">\n                        {title}\n                    </div>\n                    <div className=\"modal-body\">\n                        <img src={src}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-backdrop abs\" onClick={cancel}></div>\n        </div>\n    )\n}\n\nexport default PictureModal;","import React from 'react';\nimport _ from 'lodash';\n\nconst HSLToHex = (h,s,l) => {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n        m = l - c / 2,\n        r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c; g = x; b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x; g = c; b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0; g = c; b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0; g = x; b = c;\n    } else if (240 <= h && h < 300) {\n        r = x; g = 0; b = c;\n    } else if (300 <= h && h < 360) {\n        r = c; g = 0; b = x;\n    }\n    // Having obtained RGB, convert channels to hex\n    r = Math.round((r + m) * 255).toString(16);\n    g = Math.round((g + m) * 255).toString(16);\n    b = Math.round((b + m) * 255).toString(16);\n\n    // Prepend 0s, if necessary\n    if (r.length == 1)\n        r = \"0\" + r;\n    if (g.length == 1)\n        g = \"0\" + g;\n    if (b.length == 1)\n        b = \"0\" + b;\n\n    return \"#\" + r + g + b;\n}\n\nconst HexToHSL = (H) => {\n    // Convert hex to RGB first\n    let r = 0, g = 0, b = 0;\n    if (H.length == 4) {\n      r = \"0x\" + H[1] + H[1];\n      g = \"0x\" + H[2] + H[2];\n      b = \"0x\" + H[3] + H[3];\n    } else if (H.length == 7) {\n      r = \"0x\" + H[1] + H[2];\n      g = \"0x\" + H[3] + H[4];\n      b = \"0x\" + H[5] + H[6];\n    }\n    // Then to HSL\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n  \n    if (delta == 0)\n      h = 0;\n    else if (cmax == r)\n      h = ((g - b) / delta) % 6;\n    else if (cmax == g)\n      h = (b - r) / delta + 2;\n    else\n      h = (r - g) / delta + 4;\n  \n    h = Math.round(h * 60);\n  \n    if (h < 0)\n      h += 360;\n  \n    l = (cmax + cmin) / 2;\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    const hsl = {\n        hue: h,\n        sat: s,\n        lum: l\n    }\n  \n    return hsl;\n}\n\nclass Colorz extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        }\n\n    }\n    changeHandler = (e, colorSet) => {\n        const { colors, setColors } = this.props;\n        const pickedColor = HexToHSL(e.target.value);\n        const newColors = _.clone(colors);\n        newColors[colorSet] = pickedColor\n        console.log(\"changing colors:\", newColors);\n        setColors(newColors);\n    }\n\n    toggleColorControls = () => {\n        const { show } = this.state;\n        this.setState({ show: !show });\n    }\n\n    render() {\n        const { colors } = this.props;\n        let colorModal = null;\n        if (this.state.show) {\n            colorModal =\n            <div className=\"modal-container\">\n                <div className=\"modal-header barlow\">Colorize</div>\n                <div className=\"modal-body\">\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"primary\" onChange={(e) => this.changeHandler(e, \"primary\")} value={HSLToHex(colors.primary.hue, colors.primary.sat, colors.primary.lum)}/>\n                        <label htmlFor=\"primary\">Primary Color</label>\n                    </div>\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"secondary\" onChange={(e) => this.changeHandler(e, \"secondary\")} value={HSLToHex(colors.secondary.hue, colors.secondary.sat, colors.secondary.lum)}/>\n                        <label htmlFor=\"secondary\">Secondary Color</label>\n                    </div>\n                    <div className=\"color-node\">\n                        <input type=\"color\" id=\"background\" onChange={(e) => this.changeHandler(e, \"background\")} value={HSLToHex(colors.background.hue, colors.background.sat, colors.background.lum)}/>\n                        <label htmlFor=\"background\">Background Color</label>\n                    </div>\n                </div>\n            </div>\n        }\n        \n        return (\n            <div className=\"colorz-anchor\">\n                <div className=\"colorz-icon\" onClick={this.toggleColorControls}><i>palette</i></div>\n                {colorModal}\n            </div>\n        )\n    }\n\n}\n\nexport default Colorz;","import React from 'react';\n\nclass NoteModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            note: props.item.note\n        }\n    }\n\n    submit = () => {\n        this.props.submit(this.props.item, this.state.note);\n    }\n\n    updateForm = (e) => {\n        this.setState({ note: e.target.value});\n    }\n\n    render() {\n        const { note } = this.state;\n        const { item } = this.props;\n        return (\n            <div className=\"modal-layer\">\n                <div className=\"modal\">\n                    <div id=\"submitQuote\" className=\"modal-container\" style={{width: \"500px\"}}>\n                        <div className=\"modal-header barlow\">\n                            Note for {item.description}\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className={`input-set`}>\n                                <div className=\"input-set-label\">Note</div>\n                                {\n                                    <textarea id=\"note\" type=\"textarea\" onChange={(e) => this.updateForm(e)} value={note}/>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"panel-buttons\">\n                            <div className=\"text-button secondary dim\" onClick={this.props.cancel}><i>do_disturb</i><span>Cancel</span></div>\n                            <div className=\"text-button\" onClick={this.submit}><i>send</i><span>Submit</span></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-backdrop abs\" onClick={this.props.cancel}></div>\n            </div>\n        )\n    }\n}\n\nexport default NoteModal;","import './App.css';\nimport React from 'react';\nimport Catalog from './Components/catalog';\nimport Cart from './Components/cart';\nimport SuperSelect from './Components/superSelect';\nimport SuperDate from './Components/superDate';\nimport RadioButton from './Components/radio';\nimport Loader from './loader';\nimport SubmitForm from './Components/submitForm';\nimport PictureModal from './Components/PictureModal';\nimport Colorz from './Components/Colorz';\nimport NoteModal from './Components/noteModal';\nimport _ from 'lodash';\n\n\nconst APIURL = 'https://demo.rentalworksweb.com/api/v1';\nconst ACTIVITYLIST = [\n  {\n    name: \"RENTAL\",\n    code: \"R\",\n    label: \"Rental\"\n  },\n  {\n    name: \"SALES\",\n    code: \"S\",\n    label: \"Sales\"\n  },\n  {\n    name: \"PARTS\",\n    code: \"P\",\n    label: \"Parts\"\n  }\n  // {\n  //   name: \"labor\",\n  //   code: \"L\",\n  //   label: \"Labor\"\n  // },\n  // {\n  //   name: \"misc\",\n  //   code: \"M\",\n  //   label: \"Misc\"\n  // }\n]\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      route: \"home\",\n      mainModal: null,\n      credentials: null,\n      activity: ACTIVITYLIST[0],\n      inventoryType: null,\n      category: null,\n      subCategory: null,\n      warehouse: null,\n      customer: \"\",\n      email: \"\",\n      cartList: {},\n      startDate: new Date(),\n      endDate: new Date(),\n      quotePeriod: 1,\n      cartMode: \"out\",\n      showColorModal: false,\n      colors: {\n        primary: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--primary-lum').slice(0,-1))\n        },\n        secondary: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--secondary-lum').slice(0,-1))\n        },\n        background: {\n          hue: parseInt(getComputedStyle(document.body).getPropertyValue('--background-hue')),\n          sat: parseInt(getComputedStyle(document.body).getPropertyValue('--background-sat').slice(0,-1)),\n          lum: parseInt(getComputedStyle(document.body).getPropertyValue('--background-lum').slice(0,-1))\n        }\n      }\n    };\n  }\n\n  addItemToCart = async(item, q) => {\n    const { cartList, activity, warehouse, inventoryType, category } = this.state;\n    const popCart = _.isEmpty(cartList)\n\n    const loadAccessories = async (parent) => {\n      const accessories = await this.getAccessories(parent);\n      await Promise.all(accessories.map(async (acc, i) => {\n        await quantizeCartItem(acc);\n      }))\n    }\n    const quantizeCartItem = async (item) => {\n      //package item\n      if (item.type != \"ITEM\" && item.type != \"ACCESSORY\") {\n        await loadAccessories(item);\n      }\n      // correct q if greater than supply\n      console.log(\"q for\", item.description, \"is\", q, \"and availability is\", item.available);\n      const adjustedQ = Math.max(Math.min(q, item.available), 0);\n      console.log(\"so q is now\", adjustedQ);\n      \n      item.quantity.fraction = item.quantity.default * adjustedQ;\n      item.quantity.actual = Math.ceil(item.quantity.fraction);\n      cartList[item.address] = item;\n    }\n\n    \n    //add item or update quantity?\n    if (cartList[item.address]) {\n      Object.keys(cartList).forEach(key => {\n        if (key.indexOf(item.address) === 0) {\n          if (q <= 0 && !cartList[item.address].isOption) {\n            delete cartList[key];\n          } else {\n            console.log(\"q for\", item.description, \"is\", q, \"and availability is\", item.available);\n            const adjustedQ = Math.max(Math.min(q, item.available), 0);\n            console.log(\"so q is now\", adjustedQ);\n            // updating fraction value\n            if (!cartList[key].isOption) {\n              cartList[key].quantity.fraction = (cartList[key].quantity.default * adjustedQ);\n            } else if (cartList[key].isOption && key === item.address) {\n              cartList[key].quantity.fraction = adjustedQ;\n            }\n            // correcting negative fraction values\n            if (cartList[key].quantity.fraction < 0) {\n              cartList[key].quantity.fraction = 0;\n            }\n            // setting actual to next-highest whole num of fraction\n            cartList[key].quantity.actual = Math.ceil(cartList[key].quantity.fraction);\n          }\n        }\n      })\n    } else {\n      if (!item.isOption && q != 0) await quantizeCartItem(item);\n    }\n\n    //\n    if (popCart) {\n      this.toggleCart(\"in\");\n    }\n    console.log(\"cartList:\", cartList);\n    this.setState({ cartList: cartList });\n  }\n\n  displayNote = (item) => {\n    const noteModal = <NoteModal item={item} submit={this.addNote} cancel={() => this.setMainModal(null)}/>\n    this.setMainModal(noteModal);\n  }\n  \n  addNote = (item, note) => {\n    const { cartList } = this.state;\n    console.log(\"adding note to:\", item, note);\n    const address = item.branchChain.join(\"~\");\n    cartList[address].note = note;\n    this.setState({ cartList: cartList, mainModal: null });\n  }\n\n  clearCart = () => {\n    this.setState({ cartList: {} })\n  }\n\n  changeRoute = (route) => {\n    this.setState({ route: route });\n  }\n\n  getCategories = async () => {\n    const { credentials, activity, inventoryType } = this.state;\n    if (this.state.inventoryType) {\n      \n      const resp = await fetch(`${APIURL}/${activity.name}category/browse`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'orderby': 'Category',\n          'searchfieldoperators': ['<>', '='],\n          'searchfields': ['Inactive', 'InventoryTypeId'],\n          'searchfieldtypes': ['Text', 'Text'],\n          'searchfieldvalues': ['T', `${inventoryType.id}`],\n          'searchseparators': [',']\n        })\n      })\n        .catch(err => console.log(err));\n      //\n      const categories = await resp.json();\n      let categoryList = {};\n      categories.Rows.forEach((category, i) => {\n        categoryList[category[2]] = {\n          id: category[2],\n          value: category[2],\n          name: category[3],\n          label: category[3],\n          index: i\n        }\n      });\n      return categoryList;\n    } else {\n      return undefined;\n    }\n  }\n  \n  getSubCategories = async () => {\n    const { credentials, activity, inventoryType, category } = this.state;\n    if (this.state.inventoryType) {\n      \n      const resp = await fetch(`${APIURL}/subcategory/browse`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'orderby': 'OrderBy',\n          // 'uniqueids': {'CategoryId':category.id, 'TypeId':inventoryType.id, 'RecType': activity.code}\n          'searchfieldoperators': ['<>', '=', '=', '='],\n          'searchfields': ['Inactive', 'TypeId', 'CategoryId', 'RecType'],\n          'searchfieldtypes': ['Text', 'Text', 'Text', 'Text'],\n          'searchfieldvalues': ['T', `${inventoryType.id}`, `${category.id}`, `${activity.code}`],\n          'searchseparators': [',',',',',',',']\n        })\n      })\n        .catch(err => console.log(err));\n      //\n      const subcategories = await resp.json();\n      console.log(\"fetched sub-categories:\", subcategories);\n      let subcategoryList = {};\n      subcategories.Rows.forEach((subcategory, i) => {\n        subcategoryList[subcategory[0]] = {\n          id: subcategory[0],\n          value: subcategory[0],\n          name: subcategory[1],\n          label: subcategory[1],\n          index: i\n        }\n      });\n      console.log(subcategoryList);\n      return subcategoryList;\n    } else {\n      return undefined;\n    }\n  }\n\n  getCredentials = () => {\n    fetch(`${APIURL}/jwt`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        UserName: 'joshua',\n        Password: 'icardius'\n      })\n    })\n      .then(response => response.json())\n      .then(res => {\n        console.log(\"api credentials:\",res);\n        this.setState({ credentials: res });\n      })\n      .catch((err, res) => { console.log(err, \"response:\", res) });\n  }\n\n  getInventory = async () => {\n    const { warehouse, activity, inventoryType, category, subCategory, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/search`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'CurrencyId': '0000000E',\n          'WarehouseId': warehouse.id,\n          'AvailableFor': activity.code,\n          'InventoryTypeId': inventoryType.id,\n          'CategoryId': category.id,\n          'SubcategoryId': (subCategory ? subCategory.id : null),\n          'Classifiction': '',\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'HideInventoryWithZeroQuantity': true,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const loadedInventory = await resp.json();\n      console.log(\"loaded inventory:\", loadedInventory);\n      const inventory = loadedInventory.Rows.map((row, i) => {\n        return this.itemObjectBuilder(row, i);\n      });\n      console.log(\"packaged Inventory:\", inventory);\n      return inventory;\n    } else {\n      return null;\n    }\n  }\n\n  getAccessories = async (parent) => {\n    const { warehouse, activity, inventoryType, category, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/accessories`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'Lineage': parent.inventoryId,\n          'WarehouseId': warehouse.id,\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const loadedAccessories = await resp.json();\n      console.log(\"loaded accessories:\", loadedAccessories);\n      const accessories = loadedAccessories.Rows.map((row, i) => {\n        return this.itemObjectBuilder(row, i, parent);\n      });\n      console.log(\"packaged Accessories\", accessories);\n      return accessories;\n    } else {\n      return null;\n    }\n  }\n\n  itemObjectBuilder = (item, i, parent = null) => {\n    const { activity, warehouse, inventoryType, category, subCategory } = this.state;\n    const defaultQuantity = parent ? item[52] : 1; //item[52] = \"default quantity\"\n    const itemObject = {\n      activity: activity,\n      warehouse: warehouse,\n      inventoryType: inventoryType,\n      category: category,\n      subCategory: subCategory,\n      //\n      available: item[22],\n      branchChain: parent ? [...parent.branchChain, item[7] + \"x\" + item[0]] : [activity.name, warehouse.name, inventoryType.name, category.name, item[7]],\n      details: item,\n      iCode: item[5],\n      id: item[0],\n      inventoryId: item[2],\n      imgSrc: item[46],\n      index: i,\n      isOption: item[51],\n      isShort: false,\n      description: item[7],\n      lineage: item[3],\n      note: \"\",\n      parent: parent,\n      quantity: {\n        actual: 0,\n        fraction: item[51] ? 0 : defaultQuantity, //item[51] = \"is option\"\n        default: defaultQuantity\n      },\n      rate: item[35],\n      type: item[19]\n    }\n    itemObject.updateCartQuantity = (q) => this.addItemToCart(itemObject, q);\n    itemObject.loadAccessories = () => this.getAccessories(itemObject);\n    itemObject.displayNote = () => this.displayNote(itemObject);\n    itemObject.address = itemObject.branchChain.join(\"~\");\n    return itemObject;\n  }\n\n  getInventoryTypes = async (filter) => {\n    const { credentials, activity, warehouse } = this.state;\n    const resp = await fetch(`${APIURL}/inventorytype/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'OrderBy',\n        'searchfieldoperators': ['<>', \"=\"],\n        'searchfields': ['Inactive', activity.label],\n        'searchfieldtypes': ['Text', 'Boolean'],\n        'searchfieldvalues': ['T', true]\n      })\n    })\n      .catch(err => console.log(err));\n    //\n    const types = await resp.json();\n    let inventoryTypeList = {};\n    types.Rows.forEach((type, i) => {\n      inventoryTypeList[type[0]] = {\n        id: type[0],\n        value: type[0],\n        name: type[1],\n        label: type[1],\n        index: i\n      }\n    });\n    return inventoryTypeList;\n  }\n\n  getWarehouses = async (filter) => {\n    const resp = await fetch(`${APIURL}/warehouse/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.state.credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'Warehouse',\n        'searchfieldoperators': ['<>'],\n        'searchfields': ['Inactive'],\n        'searchfieldtypes': ['Text'],\n        'searchfieldvalues': ['T']\n      })\n    })\n      .catch(err => console.log(err));\n\n    const warehouses = await resp.json();\n    let warehouseList = {};\n    warehouses.Rows.forEach((warehouse, i) => {\n      warehouseList[warehouse[0]] = {\n        id: warehouse[0],\n        value: warehouse[0],\n        name: warehouse[1],\n        label: warehouse[1],\n        code: warehouse[2],\n        index: i\n      }\n    })\n    return warehouseList;\n  }\n\n  picPreview = (src, title) => {\n    const picHTML = <PictureModal src={src} title={title} cancel={() => this.setMainModal(null)} />;\n    this.setMainModal(picHTML);\n  }\n\n  setMainModal = (modalHTML) => {\n    this.setState({ mainModal: modalHTML });\n  }\n\n  setCategory = (e) => {\n    if (!e) {\n      console.log(\"category not set\");\n    } else {\n      this.setState({ category: e });\n    }\n  }\n\n  setSubCategory = (e) => {\n    if (!e) {\n      console.log(\"subcategory not set\");\n    } else {\n      this.setState({ subCategory: e });\n    }\n  }\n\n  setDates = (dates) => {\n    const [start, end] = dates;\n    const quotePeriod = this.getNumberOfDays(start, end);\n    this.setState({ startDate: start, endDate: end, quotePeriod: quotePeriod });\n  }\n\n  setInventoryType = (e) => {\n    if (!e) {\n      console.log(\"inventoryType not set\");\n    } else {\n      this.setState({ inventoryType: e, category: null});\n    }\n  }\n\n  setActivity = (e) => {\n    this.setState({ activity: e, inventoryType: null });\n  }\n\n  setWarehouse = (e) => {\n    if (!e) {\n      console.log(\"warehouse not set\");\n    } else {\n      this.setState({ warehouse: e });\n    }\n  }\n\n  submitModal = () => {\n    const modalHTML =\n      <SubmitForm\n        submit={this.submitQuote}\n        cancel={() => this.setMainModal(null)}\n      />\n    this.setMainModal(modalHTML);\n  }\n\n  submitQuote = (formData) => {\n    console.log(formData);\n    const modalConfirmation =\n    <div className=\"modal-layer\">\n        <div className=\"modal\">\n          <div id=\"submitQuote\" className=\"modal-container\">\n            <div className=\"modal-header barlow\">\n              Confirmation\n            </div>\n            <div className=\"modal-body\" style={{padding:\"50px\"}}>\n              Quote Requested!\n            </div>\n            <div className=\"panel-buttons\">\n              <div className=\"text-button secondary dim\"onClick={() => this.setMainModal(null)}><i>do_disturb</i><span>Close</span></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-backdrop abs\" onClick={() => this.setMainModal(null)}></div>\n      </div>\n    \n    this.setState({\n      route: \"catalog\",\n      mainModal: modalConfirmation,\n      activity: ACTIVITYLIST[0],\n      inventoryType: null,\n      category: null,\n      subcategory: null,\n      cartList: {},\n      startDate: new Date(),\n      endDate: new Date(),\n      quotePeriod: 1,\n      cartMode: \"out\"\n    })\n  }\n\n  // checkAvailability = (inventoryId, start, end) => {\n  //   fetch(`${APIURL}/inventoryavailability/getinventoryavailability`, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Authorization': `Bearer ${this.state.credentials.access_token}`,\n  //       'content-type': 'application/json'\n  //     },\n  //     body: {\n  //       InventoryId: inventoryId,\n  //       Warehouse: this.state.warehouse,\n  //       FromDate: start,\n  //       ToDate: end\n  //     }\n  //   })\n  // }\n\n  setColors = (colors) => {\n    Object.keys(colors).forEach(color => {\n      colors[color].contrast = \"black\";\n      colors[color].max = \"0%\";\n      colors[color].min = \"100%\";\n      const { hue, lum } = colors[color];\n      if (lum < 40) {\n        colors[color].contrast = \"white\";\n        colors[color].max = \"100%\";\n        colors[color].min = \"0%\";\n      } else if (lum < 70) {\n        if (hue < 45 || hue > 185) {\n          colors[color].contrast = \"white\";\n          colors[color].max = \"100%\";\n          colors[color].min = \"0%\";\n        }\n      }\n    })\n    this.setState({ colors: colors });\n  }\n\n  renderColors = () => {\n    const { colors } = this.state;\n    Object.keys(colors).forEach(color => {\n      document.body.style.setProperty(`--${color}-hue`, colors[color].hue);\n      document.body.style.setProperty(`--${color}-sat`, colors[color].sat + \"%\");\n      document.body.style.setProperty(`--${color}-lum`, colors[color].lum + \"%\");\n      document.body.style.setProperty(`--${color}-contrast`, colors[color].contrast);\n      document.body.style.setProperty(`--${color}-max`, colors[color].max);\n      document.body.style.setProperty(`--${color}-min`, colors[color].min);\n    })\n  }\n\n  toggleCart = (mode) => {\n    const { cartMode } = this.state;\n    let newMode = undefined;\n    if (typeof mode === \"string\") {\n      newMode = mode;\n    } else {\n      newMode = cartMode === \"in\" ? \"out\" : \"in\";\n    }\n    this.setState({ cartMode: newMode });\n  }\n\n  getNumberOfDays = (start, end) => {\n    const d1 = new Date(start);\n    const d2 = new Date(end);\n    const oneDay = 1000 * 60 * 60 * 24;\n    const diffInTime = d2.getTime() - d1.getTime();\n    const diffInDays = Math.round(diffInTime / oneDay);\n    return diffInDays + 1;\n  }\n\n  componentDidMount() {\n    this.setColors(this.state.colors);\n    this.getCredentials();\n  } \n\n  render() {\n    const { route, mainModal, warehouse, activity, inventoryType, category, subCategory, startDate, endDate, quotePeriod, cartList, cartMode, showColorsModal, colors } = this.state;\n    //console.log(\"App render with state:\", this.state);\n    //\n    let headerSection, colorsModal, paramColumn, catalogColumn, cartColumn, mainApp = undefined;\n    //\n\n    this.renderColors();\n    const { primary, secondary, background } = colors;\n    //\n    switch (route) {\n      case 'home':\n        headerSection = \n        <div className=\"header-banner\">\n          <div className=\"banner-content\">\n            <h1>Welcome!</h1>\n          </div>\n          <div className=\"banner-background\">\n            <img src=\"https://h7f7z2r7.stackpathcdn.com/sites/default/files/images/articles/blakcstonemain.jpg\"/>\n          </div>\n        </div>\n\n        catalogColumn =\n        <div>\n          \n        </div>\n        break;\n      case 'catalog':\n        if (this.state.credentials) {\n          switch (this.state.credentials.statuscode) {\n            case 0:\n              colorsModal = <Colorz colors={colors} setColors={this.setColors} />;\n              paramColumn =\n                <div className=\"column\">\n                \n                  <div className=\"parameters\" style={{ color: primary.contrast, borderColor: primary.contrast }}>\n                    <div className=\"column-header column-segment\">\n                      <h1><i>tune</i>PARAMETERS</h1>\n                    </div>\n                    <div className=\"column-segment\">\n                      <SuperDate\n                        startDate={startDate}\n                        endDate={endDate}\n                        mode=\"start\"\n                        setDates={this.setDates}\n                        textColor={primary.contrast}\n                      />\n                      <SuperDate\n                        startDate={startDate}\n                        endDate={endDate}\n                        mode=\"end\"\n                        setDates={this.setDates}\n                        textColor={primary.contrast}\n                      />\n                    </div>\n                    <div className=\"column-segment\">\n                      <RadioButton\n                        name=\"Activity Type\"\n                        options={ACTIVITYLIST}\n                        selected={activity.name}\n                        action={this.setActivity}\n                      />\n                    </div>\n                    <div className=\"column-segment select\">\n                      <SuperSelect\n                        name=\"warehouse\"\n                        loader={this.getWarehouses}\n                        action={this.setWarehouse}\n                        reloadOn={[activity]}\n                        placeholder=\"Select a Warehouse\"\n                        searchable={false}\n                        textColor={primary.contrast}\n                        preload\n                      />\n                    </div>\n                    <div className=\"column-segment select\">\n                      <SuperSelect\n                        name=\"Inventory Type\"\n                        loader={this.getInventoryTypes}\n                        action={this.setInventoryType}\n                        reloadOn={[activity, warehouse]}\n                        placeholder=\"Select an Inventory Type\"\n                        searchable={true}\n                        textColor={primary.contrast}\n                        value={inventoryType}\n                      // preload\n                      />\n                    </div>\n                    <div className=\"column-segment select\">\n                      <SuperSelect\n                        name=\"category\"\n                        loader={this.getCategories}\n                        action={this.setCategory}\n                        reloadOn={[activity, warehouse, inventoryType]}\n                        placeholder=\"Select a Category\"\n                        searchable={true}\n                        textColor={primary.contrast}\n                        value={category}\n                      />\n                    </div>\n                    {/* <div className=\"column-segment select\">\n                      <SuperSelect\n                        name=\"sub-category\"\n                        loader={this.getSubCategories}\n                        action={this.setSubCategory}\n                        reloadOn={[activity, warehouse, inventoryType, category]}\n                        placeholder=\"Select a Sub-Category\"\n                        searchable={true}\n                        textColor={primary.contrast}\n                        value={subCategory}\n                      />\n                    </div> */}\n                  </div>\n                </div>\n  \n              catalogColumn =\n                <div className=\"column center\" style={{ color: background.contrast, borderColor: background.contrast }}>\n                  <div className=\"column-header column-segment\">\n                    <h1><i>menu_book</i>{activity.label.toUpperCase()} CATALOG</h1>\n                  </div>\n                  <Catalog\n                    loader={this.getInventory}\n                    activity={activity}\n                    warehouse={warehouse}\n                    inventoryType={inventoryType}\n                    category={category}\n                    subCategory={subCategory}\n                    startDate={startDate}\n                    endDate={endDate}\n                    cart={cartList}\n                    picPreview={this.picPreview}\n                  />\n                </div>\n  \n              cartColumn =\n                <div className=\"column right\">\n                  <Cart\n                    cartMode={cartMode}\n                    cartList={cartList}\n                    activityList={ACTIVITYLIST}\n                    quotePeriod={quotePeriod}\n                    clearCart={this.clearCart}\n                    submitQuote={this.submitModal}\n                    toggleCart={this.toggleCart}\n                  />\n                </div>\n              \n              mainApp =\n                <article>\n                  {colorsModal}\n                  {mainModal}\n                  <div className=\"body-margin\"></div>\n                  <div className=\"body-main\">\n                    {paramColumn}\n                    {catalogColumn}\n                  </div>\n                  <div className=\"body-margin\">\n                    {cartColumn}\n                  </div>\n                </article>\n              break;\n            case undefined:\n              catalogColumn = <div className=\"modal\"><Loader textColor={background.contrast}/></div>\n              break;\n            default:\n              console.log(\"there was a problem loading your credentials\");\n          }\n        } else {\n          mainApp = <div className=\"modal abs\"><Loader input=\"CONNECTING TO DATABASE\" textColor={background.contrast}/></div>\n        }\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          <nav>\n            <div className=\"margin-left\">\n\n            </div>\n            <div className=\"main-nav\">\n              <ul>\n                <li>Home</li>\n                <li>About Us</li>\n                <li>News</li>\n                <li>Services</li>\n                <li>Call an Agent</li>\n                <li onClick={() => this.changeRoute('catalog')}>Get a Quote</li>\n              </ul>\n            </div>\n            <div className=\"margin-right\">\n            </div>\n          </nav>\n          {headerSection}\n        </header>\n        {mainApp}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}