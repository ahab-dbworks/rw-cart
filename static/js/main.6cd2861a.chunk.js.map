{"version":3,"sources":["loader.js","Components/catalogContainer.js","Components/superInput.js","Components/catalogItem.js","Components/radio.js","Components/catalog.js","Components/cartContainer.js","Components/cartItem.js","Components/cart.js","Components/superSelect.js","Components/superDate.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","props","message","input","console","log","className","CatalogContainer","loadAccessories","a","loader","rowContent","content","subRowCount","Rows","length","toggleExpanded","address","updateSubRows","isExpanded","rootParent","rowIndex","forceUpdate","subAddress","state","undefined","this","header","cart","addItemToCart","tabBtn","rowTab","onClick","accessoryContent","showRows","Object","keys","forEach","rowSet","indexOf","map","item","i","style","height","React","Component","SuperInput","changeMode","newMode","updateValue","stateValue","setState","mode","value","changeValue","e","target","enterValue","key","handleLoad","select","inputDisplay","type","onFocus","onBlur","onChange","onKeyPress","autoFocus","CatalogItem","rowHTML","rowDetails","iCode","id","toLowerCase","description","imgsrc","rate","avail","optional","parent","cartQ","qPlus","qMinus","quantity","actual","imageSource","src","q","toFixed","itemRow","rowOutput","RadioButton","checkMe","v","action","name","options","selected","label","option","checkedVal","icon","DISPLAYMODEOPTIONS","Catalog","loadInventory","search","searchField","setDisplayMode","displayMode","prevProps","activity","warehouse","inventoryType","category","_","isEqual","getAccessories","searchBar","catalogDisplay","filteredContent","filter","row","includes","loadMessage","placeholder","CartContainer","toggle","collapsedBody","collapseBody","isOnlyChild","branchTier","parentItemHeader","items","branchGroup","branchTierSubTotal","branchChain","isOption","push","headerBarContent","updateCart","details","join","CartItem","group","itemQuantity","Cart","cartList","cartBody","cartSubTotal","topTier","grandTotal","quotePeriod","isEmpty","flex","cartSwitchTotal","toggleCart","cartMode","display","clearCart","submitQuote","SuperSelect","getOptions","values","reloadOn","preload","advPlaceholder","resetValues","searchable","customStyles","provided","color","isSelected","control","backgroundColor","fontStyle","indicatorSeparator","dropdownIndicator","isLoading","selectProps","padding","singleValue","loadingIndicator","valueContainer","optionsList","labelName","substring","toUpperCase","itemid","styles","classNamePrefix","isSearchable","Select","SuperDate","startDate","endDate","setDates","dates","selectsRange","inline","date","selectsStart","selectsEnd","minDate","DatePicker","APIURL","ACTIVITYLIST","code","App","addedItemBranchChain","popCart","accessories","Promise","all","acc","packageItem","index","defaultQuantity","itemPackage","Math","ceil","fraction","default","available","icode","isShort","min","changeRoute","route","getCategories","credentials","page","fetch","method","headers","access_token","body","JSON","stringify","catch","err","resp","json","categories","categoryList","getCredentials","UserName","Password","then","response","res","getInventory","inventory","parentId","getInventoryTypes","types","inventoryTypeList","getWarehouses","warehouses","warehouseList","setCategory","start","end","getNumberOfDays","setInventoryType","setActivity","setWarehouse","checkAvailability","inventoryId","InventoryId","Warehouse","FromDate","ToDate","d1","Date","diffInTime","getTime","round","subCategory","customer","email","headerSection","paramColumn","catalogColumn","cartColumn","subcategory","mainApp","statuscode","activityList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cd2861a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = (props) => {\n    const message = props.input ? props.input : \"LOADING\";\n    console.log(\"loader details:\", props, message);\n    return (\n        <div className=\"loader-blip\">\n            <div className=\"loader-text\">{message}</div>\n            <ul className=\"blips\">\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n                <li className=\"blip\"></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Loader;","import React from 'react';\nimport CatalogItem from './catalogItem';\nimport Loader from '../loader';\nimport _ from 'lodash';\n\nclass CatalogContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        this.isExpanded = false\n        this.subRowCount = 1;\n        this.content = undefined;\n        this.rowIndex = {};\n    }\n\n    loadAccessories = async () => {\n        this.content = await this.props.loader(this.props.rowContent[2]);\n        this.subRowCount = this.content.Rows.length;\n    }\n\n    toggleExpanded = async () => {\n        const { address, updateSubRows } = this.props;\n        this.isExpanded = !this.isExpanded;\n        if (!this.content) {\n            await this.loadAccessories();\n        }\n        if (this.props.rootParent) {\n            this.rowIndex[address] = this.subRowCount;\n            this.forceUpdate()\n        } else {\n            updateSubRows(address, (this.isExpanded ? this.subRowCount : 0));\n        }\n        \n    }\n\n    updateSubRows = (subAddress, subRowCount) => {\n        this.rowIndex[subAddress] = subRowCount;\n        this.forceUpdate();\n    }\n\n    render() {\n        const { address, header, cart, loader, addItemToCart } = this.props;\n        let rowIndex, updateSubRows = undefined;\n        if (this.props.rootParent) {\n            updateSubRows = this.updateSubRows;\n            rowIndex = this.rowIndex;\n        } else {\n            updateSubRows = this.props.updateSubRows;\n            rowIndex = this.props.rowIndex\n        }\n        //\n        const tabBtn = this.isExpanded ? \"expand_less\" : \"expand_more\";\n        const rowTab = <div className=\"row-expander btn\" onClick={this.toggleExpanded}><i>{tabBtn}</i></div>\n        //\n        let accessoryContent = undefined;\n        let showRows = 1;\n        if (this.isExpanded) {\n            Object.keys(rowIndex).forEach(rowSet => {\n                if (rowSet.indexOf(address) === 0) {\n                    showRows += rowIndex[rowSet];\n                }\n            })\n            if (this.content) {\n                accessoryContent = this.content.Rows.map((item, i) => {\n                    return (\n                        <div key={i} className={`catalog-item-container ${item[19]}`}>\n                            <CatalogItem\n                                address={address}\n                                rowContent={item}\n                                cart={cart}\n                                loader={loader}\n                                addItemToCart={addItemToCart}\n                                updateSubRows={updateSubRows}\n                                rootParent={false}\n                                rowIndex={rowIndex}\n                            />\n                        </div>\n                    )\n                })\n            } else {\n                accessoryContent = <Loader/>\n            }\n        } else {\n            showRows = 1;\n        }\n\n        \n\n        //style={{ height: (subRowCount * 50) + \"px\" }} -- in parent div (below) for animated row expansion\n        return (\n            <div className=\"collapsible-container\" style={{ height: ((showRows * 52) + (this.isExpanded ? showRows * 2 : 0)) + \"px\" }}>  \n                <div className=\"container-header\">\n                    {rowTab}\n                    {header}\n                </div>\n                <div className=\"container-accessories\">\n                    {accessoryContent}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CatalogContainer;","import React from 'react';\nimport _ from 'lodash';\n\nclass SuperInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"read\",\n            stateValue: this.props.value\n        }\n    }\n\n    changeMode = (newMode) => {\n        switch (newMode) {\n            case \"read\":\n                this.props.updateValue(this.state.stateValue);\n                this.setState({ mode: \"read\" });\n                break;\n            case \"write\":\n                this.setState({ mode: \"write\", stateValue: this.props.value });\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeValue = (e) => {\n        this.setState({ stateValue: e.target.value })\n    }\n\n    enterValue = (e) => {\n        if (e.key === \"Enter\") {\n            this.changeMode(\"read\");\n        }\n    }\n\n    handleLoad = (e) => {\n        e.target.select();\n    }\n\n    render() {\n        const { mode, stateValue } = this.state;\n        const { value } = this.props;\n        let inputDisplay = undefined;\n        switch (mode) {\n            case \"read\":\n                inputDisplay =\n                    <div className=\"super-input\">{value}</div>\n                break;\n            case \"write\":\n                inputDisplay =\n                    <input className=\"super-input\" type=\"number\" onFocus={this.handleLoad} onBlur={() => this.changeMode(\"read\")} onChange={this.changeValue} onKeyPress={this.enterValue} value={stateValue} autoFocus/>\n        }\n        return (\n            <div className=\"super-input-container\" onClick={() => this.changeMode(\"write\")}>\n                {inputDisplay}\n            </div>\n        )\n    }\n}\n\nexport default SuperInput;","import React from 'react';\nimport CatalogContainer from './catalogContainer';\nimport SuperInput from './superInput';\n\nconst CatalogItem = (props) => {\n    const address = props.address + \"~\" + props.rowContent[7] + (props.rowContent[3] != null ? \"x\" + props.rowContent[0] : \"\");\n\n    const itemRow = (item) => {\n        const { cart } = props;\n        const rowDetails = {\n            address: address,\n            iCode: item[5],\n            id: item[0],\n            type: item[19].toLowerCase(),\n            description: item[7],\n            imgsrc: item[46],\n            rate: item[35],\n            avail: item[22],\n            optional: item[51],\n            parent: item[3]\n        }\n\n        let cartQ = 0;\n        let qPlus = false;\n        let qMinus = false;\n        if (rowDetails.avail > 0) {\n            if (cart[rowDetails.address]) {\n                cartQ = cart[rowDetails.address].quantity.actual;\n                qMinus = cartQ > 0 ? true : false;\n                if (rowDetails.avail > cartQ) {\n                    qPlus = true;\n                }\n            } else {\n                qPlus = true;\n            }\n        }\n        \n        let imageSource = undefined;\n        if (rowDetails.imgsrc) {\n            imageSource = <div className=\"item-image-thumbnail\"><img src={rowDetails.imgsrc}/></div>\n        } else {\n            imageSource = <div className=\"item-image-thumbnail\"><i>cancel_presentation</i><br/><span>No Image</span></div>\n        }\n\n        let optional = \"\";\n        if (rowDetails.parent) {\n            optional = rowDetails.optional ? \"optional\" : \"required\"\n        }\n\n        return (\n            <ul className=\"catalog-item-elements\">\n                <li className={`item-segment item-quantity ${optional}`}>\n                    <div className=\"quantity-control\">\n                        <div className={`btn${qMinus ? \"\" : \" inactive\"}`} onClick={(qMinus ? () => props.addItemToCart(item, rowDetails.address, cartQ - 1) : null)}>\n                            <i>remove</i>\n                        </div>\n                        <div className=\"quantity-count\">\n                            <SuperInput\n                                value={cartQ}\n                                updateValue={(q) => props.addItemToCart(item, rowDetails.address, q)}\n                            />\n                        </div>\n                        <div className={`btn${qPlus ? \"\" : \" inactive\"}`} onClick={(qPlus ? () => props.addItemToCart(item, rowDetails.address, cartQ + 1) : null)}>\n                            <i>add</i>\n                        </div>\n                    </div>\n                </li>\n                <li className=\"item-segment item-image\">{imageSource}</li>\n                <li className=\"item-segment item-description\"><div className=\"row-description\">{rowDetails.description}</div></li>\n                <li className=\"item-segment item-rate numeric\"><div className=\"grid-label\">Rate:</div><div>$ {rowDetails.rate.toFixed(2)}</div></li>\n                {/* <li className=\"item-segment numeric\"><div className=\"grid-label\">Available:</div><div>{rowDetails.avail}</div></li> */}\n            </ul>\n        )\n    }\n\n    const { rowContent, cart, loader, addItemToCart, updateSubRows, rowIndex, rootParent } = props;\n    const rowHTML = itemRow(rowContent);\n    let rowTab = null;\n    let rowOutput = undefined;\n    switch (rowContent[19]) {\n        case \"ITEM\":\n        case \"ACCESSORY\":\n            rowTab = <div className=\"row-expander\"></div>\n            rowOutput = rowHTML\n            break;\n        default:\n            rowOutput =\n                <CatalogContainer\n                    address={address}\n                    header={rowHTML}\n                    rowContent={rowContent}\n                    cart={cart}\n                    loader={loader}\n                    addItemToCart={addItemToCart}\n                    updateSubRows={updateSubRows}\n                    rowIndex={rowIndex}\n                    rootParent={rootParent}\n                />\n            break;\n    }\n    return (\n        <div className=\"catalog-item\">\n            { rowTab }\n            { rowOutput }\n        </div>\n    )\n}\n\nexport default CatalogItem;","import React from \"react\";\n\nclass RadioButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    checkMe = (v) => {\n        this.props.action(v);\n    }\n\n    render() {\n        const { name, options, selected } = this.props;\n        if (options.length > 0) {\n            let label = undefined;\n            return (\n                <div className=\"radio-set\">\n                    <div className=\"super-label\">{name}</div>\n                    <ul className=\"radio-list\">\n                        {\n                            options.map((option, i) => {\n                                const checkedVal = selected === option.name ? \"checked\" : \"\";\n                                if (option.icon) {\n                                    label = <i className=\"\">{option.icon}</i>\n                                } else {\n                                    label = option.label\n                                }\n                                return (\n                                    \n                                    <li\n                                        key={i}\n                                        onClick={() => this.checkMe(option)}\n                                        className={`radio-option ${checkedVal}`}\n                                    >\n                                        {label}\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            )\n        } else {\n            return <div className=\"radio-set\"></div>\n        }\n    }\n}\n\nexport default RadioButton;","import React from 'react';\nimport _ from 'lodash';\nimport CatalogItem from './catalogItem';\nimport RadioButton from './radio';\nimport Loader from '../loader';\n\nconst DISPLAYMODEOPTIONS = [\n    {\n        name: \"grid\",\n        value: \"G\",\n        label: \"Grid\",\n        icon: \"calendar_view_month\"\n    },\n    {\n        name: \"table\",\n        value: \"T\",\n        label: \"Table\",\n        icon: \"reorder\"\n    }\n]\n\nclass Catalog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayMode: DISPLAYMODEOPTIONS[1],\n            content: undefined,\n            searchField: \"\"\n        }\n        this.mode = \"waiting\";\n    }\n\n    loadInventory = async () => {\n        this.mode = \"loading\";\n        const content = await this.props.loader();\n        // console.log(\"loaded:\", content);\n        if (content) {\n            this.mode = \"display\"\n            this.setState({ content: content });\n        }\n    }\n\n    search = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    setDisplayMode = (e) => {\n        this.setState({ displayMode: e })\n    }\n\n    componentDidUpdate(prevProps) {\n        const { activity, warehouse, inventoryType, category } = this.props;\n        if (!_.isEqual(this.props, prevProps)) {\n            console.log(\"a catalog prop has changed\")\n            \n            this.loadInventory();\n        }    \n    }\n    componentDidMount() {\n        console.log(this.props);\n        const { warehouse, inventoryType, category } = this.props;\n        if (warehouse && inventoryType && category) {\n            this.loadInventory();\n        }\n    }\n\n    render() {\n        const { displayMode, content, searchField } = this.state;\n        const { cart, getAccessories, addItemToCart, activity, warehouse, inventoryType, category } = this.props;\n        let searchBar = undefined;\n        let catalogDisplay = undefined;\n\n        let address = undefined;\n        if (category === null || inventoryType === null || warehouse === null || activity === null) {\n            this.mode = \"waiting\";\n        }\n        \n        switch (this.mode) {\n            case \"waiting\":\n                catalogDisplay = <div className=\"modal abs barlow\">AWAITING PARAMETERS</div>\n                break;\n            case \"loading\":\n                catalogDisplay = <div className=\"modal abs\"><Loader/></div>\n                break;\n            case \"display\":\n                address = `${activity.name}~${warehouse.name}~${inventoryType.name}~${category.name}`;\n                const filteredContent = content.Rows.filter(row => {\n                    return row[7].toLowerCase().includes(searchField.toLowerCase())\n                })\n                let loadMessage = \"\";\n                if (filteredContent.length > 0) {\n                    loadMessage = null;\n                } else {\n                    loadMessage = <div className=\"modal abs\">No inventory items match this criteria</div>\n                }\n                searchBar =\n                <div className=\"search-field\">\n                    <input type=\"text\" onChange={this.search} value={searchField} placeholder=\"Search...\" />\n                    <RadioButton\n                        name=\"Display Mode\"\n                        options={DISPLAYMODEOPTIONS}\n                        selected={displayMode.name}\n                        action={this.setDisplayMode}\n                    />\n                </div>\n                switch (displayMode.name) {\n                    case \"table\":\n                        catalogDisplay = \n                        <div className=\"dbw-table\">\n                            <div className=\"dbw-thead\">\n                                <ul className=\"row-header\">\n                                    <li className=\"row-expander\"></li>\n                                    <li className=\"item-segment item-quantity\">Quantity</li>\n                                    <li className=\"item-segment item-image\">Image</li>\n                                    <li className=\"item-segment item-description\">Item</li>\n                                    <li className=\"item-segment item-rate\">Rate</li>\n                                    {/* <li className=\"item-segment\">Available</li> */}\n                                </ul>\n                            </div>\n                            <div className=\"dbw-tbody\">\n                                {\n                                    filteredContent.map((item, i) => {\n                                        return (\n                                            <div key={i} className={`catalog-item-container ${item[19]}`}>\n                                                <CatalogItem\n                                                    address={address}\n                                                    rowContent={item}\n                                                    cart={cart}\n                                                    loader={getAccessories}\n                                                    addItemToCart={addItemToCart}\n                                                    rootParent={true}\n                                                />\n                                            </div>\n                                        )\n                                    })\n                                }\n                                {loadMessage}\n                            </div>\n                        </div>\n                        break;\n                    case \"grid\":\n                        catalogDisplay =\n                            <div className=\"dbw-grid\">\n                                {\n                                    filteredContent.map((item, i) => {\n                                        return (\n                                            <div key={i} className={`catalog-item-container ${item[19]}`}>\n                                                <CatalogItem\n                                                    address={address}\n                                                    rowContent={item}\n                                                    cart={cart}\n                                                    loader={getAccessories}\n                                                    addItemToCart={addItemToCart}\n                                                    rootParent={true}\n                                                />\n                                            </div>\n                                        )\n                                    })\n                                }\n                                {loadMessage}\n                            </div>\n                        break;\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <section className=\"catalog\">\n                {searchBar}\n                {catalogDisplay}\n            </section>\n        )\n    }\n}\n\nexport default Catalog;","import React from 'react';\nimport CartItem from './cartItem';\nimport SuperInput from './superInput';\n\nclass CartContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsedBody: false\n        }\n    }\n\n    toggle = () => {\n        const { collapsedBody } = this.state;\n        this.setState({ collapsedBody: !collapsedBody });\n    }\n\n    componentDidMount() {\n        const {collapseBody} = this.props;\n        if (collapseBody) {\n            this.setState({ collapsedBody: collapseBody });\n        }\n    }\n\n    render() {\n        const { collapsedBody } = this.state;\n        const { isOnlyChild, branchTier, label, parentItemHeader, items } = this.props;\n        const collapseBtn = collapsedBody ? \"drag_handle\" : \"view_day\";\n\n        let branchGroup = {}\n        let branchTierSubTotal = 0;\n        items.forEach(item => {\n            if (item.branchChain.length === 5 || item.isOption) branchTierSubTotal += item.quantity.actual * item.rate;\n            if (!branchGroup[item.branchChain[branchTier]]) {\n                branchGroup[item.branchChain[branchTier]] = [];\n            }\n            branchGroup[item.branchChain[branchTier]].push(item);\n        })\n\n        let headerBarContent = undefined;\n        if (branchTier < 5) {\n            headerBarContent =\n                <ul className=\"branch-header\">\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_less\" : \"expand_more\"}</i></li>\n                    <li className=\"cart-col name\">{label}</li>\n                    <li className=\"cart-col rate numeric\">{branchTierSubTotal.toFixed(2)}</li>\n                </ul>\n        } else {\n            headerBarContent =\n                <ul className={`kit-complete-header ${parentItemHeader.parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"\"><i className=\"collapser-button\" onClick={this.toggle}>{collapsedBody ? \"expand_less\" : \"expand_more\"}</i></li>\n                    <li className=\"cart-col quantity numeric\">\n                        <div className=\"super-input-container\">\n                            <SuperInput\n                                value={parentItemHeader.quantity.actual}\n                                updateValue={(q) => this.props.updateCart(parentItemHeader.details, parentItemHeader.branchChain.join(\"~\"), q)}\n                            />\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\">{parentItemHeader.name}</li>\n                    <li className=\"cart-col rate numeric\">{parentItemHeader.rate.toFixed(2)}</li>\n                </ul>\n        }\n        return (\n            <div key={label} className={`collapser-container${(parentItemHeader ? \" kit-complete\" : \"\")}${(branchTier < 5 ? \" branch-container\" : \"\")}${isOnlyChild ? \" hidden\" : \" show\"}`}>\n                <div className={`collapser-header`}>\n                    {headerBarContent}\n                </div>\n                <ul className={`content-container ${collapsedBody ? \"hidden\" : \"show\"}`}>\n                    {\n                        Object.keys(branchGroup).map(address => {\n                            return (\n                                <CartItem\n                                    branchTier={branchTier + 1}\n                                    label={address}\n                                    content={branchGroup[address]}\n                                    isOnlyChild={Object.keys(branchGroup).length === 1 && branchTier < 4}\n                                    updateCart={this.props.updateCart}\n                                />\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default CartContainer;","import React from 'react';\nimport CartContainer from './cartContainer';\nimport SuperInput from './superInput';\n\nconst CartItem = (props) => {\n    const { branchTier, label, content, isOnlyChild } = props;\n\n    let parentItemHeader = undefined;\n    if (content.length > 1 || branchTier < 5) {\n        let group = [];\n        content.forEach(item => {\n            if (item.branchChain.length > branchTier) {\n                group.push(item);\n            } else {\n                parentItemHeader = item;\n            }\n        })\n        return (\n            <div key={label} className={`cart-item${(branchTier < 5 ? \" branch\" : \"\")}${isOnlyChild ? \" hide\" : \" show\"}`}>\n                <CartContainer\n                    branchTier={branchTier}\n                    label={label}\n                    parentItemHeader={parentItemHeader}\n                    items={group}\n                    isOnlyChild={isOnlyChild}\n                    updateCart={props.updateCart}\n                />\n            </div>\n        )\n    } else {\n        let itemQuantity = content[0].quantity.actual;\n        if (!content[0].parent || content[0].parent && content[0].isOption) {\n            itemQuantity =\n                <SuperInput\n                    value={content[0].quantity.actual}\n                    updateValue={(q) => props.updateCart(content[0].details, content[0].branchChain.join(\"~\"), q)}\n                />\n        }\n        return (\n            <div key={label} className=\"cart-item\">\n                <ul className={`${content[0].isOption ? \"option\" : \"\"} ${content[0].parent ? \"child\" : \"adult\"}`}>\n                    <li className=\"cart-col\">•</li>\n                    <li className=\"cart-col quantity numeric\">\n                        <div className=\"super-input-container\">\n                            {itemQuantity}\n                        </div>\n                    </li>\n                    <li className=\"cart-col name\">{content[0].name}</li>\n                    <li className=\"cart-col rate numeric\">{content[0].rate.toFixed(2)}</li>\n                </ul>\n            </div>\n        )  \n    }\n\n}\n\nexport default CartItem;","import React from 'react';\nimport RadioButton from './radio';\nimport CartItem from './cartItem';\nimport _ from 'lodash';\n\nconst Cart = (props) => {\n    const { cartList } = props;\n    let cartBody = undefined;\n    let cartSubTotal = 0;\n    let topTier = {}\n    Object.keys(cartList).forEach(key => {\n        const item = cartList[key];\n        if (item.branchChain.length === 5 || item.isOption) cartSubTotal += item.rate * item.quantity.actual;\n        if (!topTier[item.branchChain[0]]) {\n            topTier[item.branchChain[0]] = [];\n        }\n        topTier[item.branchChain[0]].push(item);\n    })\n    const grandTotal = cartSubTotal * props.quotePeriod;\n    \n    if (!_.isEmpty(cartList)) {\n        cartBody = \n        <div className=\"dbw-table\">\n            <div className=\"dbw-thead\">\n                <ul className=\"dbw-header\">\n                    <li className=\"cart-col spacer\"></li>\n                    <li className=\"cart-col quantity numeric\">Q</li>\n                    <li className=\"cart-col name\">Item</li>\n                    <li className=\"cart-col rate numeric\">Rate</li>\n                </ul>\n            </div>\n            <div className=\"dbw-tbody\">\n                {\n                    Object.keys(topTier).map(key => {\n                        \n                        return (\n                            <CartItem\n                                branchTier={1}\n                                label={key}\n                                content={topTier[key]}\n                                isOnlyChild={Object.keys(topTier).length === 1}\n                                updateCart={props.updateCart}\n                            />\n                        )\n                    })\n                }\n            </div>\n        </div>\n        \n        \n    } else {\n        cartBody = <div className=\"modal barlow\" style={{flex:1}}>Cart Empty</div>\n    }\n    const cartSwitchTotal = grandTotal > 0 ? grandTotal.toFixed(2) : \"\";\n    \n    return (\n        <div>\n            <div className=\"slide-panel-switch barlow\" onClick={props.toggleCart}>\n                {\n                    props.cartMode === \"in\" ? <i>logout</i> : <div style={{display: \"flex\"}}><i>shopping_cart</i>{cartSwitchTotal}</div>\n                }\n            </div>\n            <div className={`cart-container slide-panel ${props.cartMode}`}>\n                <div className=\"column-header param-set\">\n                    <h1><i>shopping_cart</i>CART</h1>\n                </div>\n                <div className=\"cart-contents param-set\">\n                    {cartBody}\n                </div>\n                <div className=\"cart-summary param-set barlow\">\n                    <div className=\"cart-summary-row\">\n                        <span>Daily Subtotal:</span>\n                        $\n                        {cartSubTotal.toFixed(2)}\n                    </div>\n                    <div className=\"cart-summary-row\">\n                        <span>Quote Duration</span>\n                        {props.quotePeriod} {(props.quotePeriod > 1 ? \"Days\" : \"Day\")}\n                    </div>\n                    <div className=\"cart-summary-row grand\">\n                        <span>Total:</span>\n                        $\n                        {(cartSubTotal * props.quotePeriod).toFixed(2)}\n                    </div>\n                </div>\n                <div className=\"cart-submit\">\n                    <div className=\"text-button dim\" onClick={props.clearCart}><i>delete_forever</i><span>Clear Cart</span></div>\n                    <div className=\"text-button\" onClick={props.submitQuote}><i>send</i><span>Submit Quote</span></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cart;","import React from 'react';\nimport Select, { NonceProvider } from 'react-select';\nimport _ from 'lodash';\n\nclass SuperSelect extends Select {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"waiting\",\n            options: undefined\n        }\n    }\n\n    getOptions = async () => {\n        this.setState({ mode: \"loading\" });\n        const options = await this.props.loader(this.props.filter);\n        if (options) {\n            switch (Object.values(options).length) {\n                case 0:\n                    this.setState({ mode: \"empty\" })\n                    break;\n                case 1:\n                    Object.values(options).forEach(value => this.props.action(value));\n                default:\n                    this.setState({ mode: \"display\", options: options });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!_.isEqual(this.props, prevProps)) {\n            if (this.props.reloadOn.includes(null)) {\n                this.setState({ mode: \"waiting\", options: undefined });\n            } else {\n                this.getOptions();\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.preload) {\n            this.getOptions();\n        }\n    }\n\n    render() {\n        const { mode, options, resetValues } = this.state;\n        const { name, action, searchable, placeholder, value } = this.props;\n        const customStyles = {\n            option: (provided, state) => ({\n                ...provided,\n                color: state.isSelected ? 'white' : 'black',\n            }),\n            control: () => ({\n                backgroundColor: 'transparent',\n                display: 'flex',\n            }),\n            placeholder: () => ({\n                color: 'rgba(255,255,255,0.75)',\n                fontStyle: 'italic'\n            }),\n            indicatorSeparator: (provided) => ({\n                ...provided,\n                backgroundColor: 'rgba(255,255,255,0.75)'\n            }),\n            dropdownIndicator: (provided, { selectProps: { isLoading }}) => ({\n                ...provided,\n                color: isLoading ? 'rgba(255,255,255,0.75)' : 'white',\n                \"&:hover\": {\n                    color: ''\n                },\n                padding: '0.5em 0 0.5em 1em'\n            }),\n            singleValue: () => ({\n                color: 'white',\n            }),\n            loadingIndicator: (provided) => ({\n                ...provided,\n                color: 'white'\n            }),\n            valueContainer: (provided) => ({\n                ...provided,\n                padding: 0\n            })\n        }\n        //\n\n        //\n        let isLoading = true;\n        let advPlaceholder, optionsList = null;\n        const labelName = name.substring(0, 1).toUpperCase() + name.substring(1);\n        switch (mode) {\n            case \"empty\":\n                advPlaceholder = \"No Options\"\n                isLoading = false;\n                break;\n            case \"waiting\":\n                advPlaceholder = \"Awaiting Parameters...\";\n                break;\n            case \"loading\":\n                advPlaceholder = \"Loading Options...\";\n                break;\n            case \"display\":\n                advPlaceholder = placeholder;\n                isLoading = false;\n                optionsList = Object.keys(options).map(itemid => {\n                    return options[itemid];\n                })\n                break;\n            default:\n                break;\n        }\n        return (\n            <div className=\"selector-set\">\n                <div className=\"super-label\">{labelName}</div>\n                <Select\n                    styles={customStyles}\n                    className={`selector ${name}-select`}\n                    classNamePrefix={`${name}-select`}\n                    isLoading={isLoading}\n                    options={optionsList}\n                    onChange={action}\n                    placeholder={advPlaceholder}\n                    isSearchable={searchable}\n                    value={value}\n                />  \n            </div>\n        )\n    }\n}\n\nexport default SuperSelect;","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass SuperDate extends DatePicker {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n        \n    }\n\n    render() {\n        const { startDate, endDate, setDates } = this.props;\n        switch (this.props.mode) {\n            case \"combined\":\n                return (\n                    <div className='date-selector'>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={dates => setDates(dates)}\n                            startDate={startDate}\n                            endDate={endDate}\n                            selectsRange\n                            inline\n                        />\n                    </div>\n                )\n            case \"start\":\n                return (\n                    <div className='date-selector'>\n                        <div className=\"super-label\">Start</div>\n                        <DatePicker\n                            selected={startDate}\n                            onChange={date => setDates([date, endDate])}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                        />\n                    </div>\n                )\n            case \"end\":\n                return (\n                    <div className='date-selector'>\n                        <div className=\"super-label\">End</div>\n                        <DatePicker\n                            selected={endDate}\n                            onChange={date => setDates([startDate, date])}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            minDate={startDate}\n                        />\n                    </div>\n                )\n            default:\n        }\n    }\n}\n\nexport default SuperDate;","import './App.css';\nimport React from 'react';\nimport Catalog from './Components/catalog';\nimport Cart from './Components/cart';\nimport SuperSelect from './Components/superSelect';\nimport SuperDate from './Components/superDate';\nimport RadioButton from './Components/radio';\nimport Loader from './loader';\nimport _ from 'lodash';\n\n\nconst APIURL = 'https://demo.rentalworksweb.com/api/v1';\nconst ACTIVITYLIST = [\n  {\n    name: \"RENTAL\",\n    code: \"R\",\n    label: \"Rental\"\n  },\n  {\n    name: \"SALES\",\n    code: \"S\",\n    label: \"Sales\"\n  },\n  {\n    name: \"PARTS\",\n    code: \"P\",\n    label: \"Parts\"\n  }\n  // {\n  //   name: \"labor\",\n  //   code: \"L\",\n  //   label: \"Labor\"\n  // },\n  // {\n  //   name: \"misc\",\n  //   code: \"M\",\n  //   label: \"Misc\"\n  // }\n]\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      route: \"home\",\n      credentials: null,\n      activity: ACTIVITYLIST[0],\n      inventoryType: null,\n      category: null,\n      subCategory: null,\n      warehouse: null,\n      customer: \"\",\n      email: \"\",\n      cartList: {},\n      startDate: new Date(),\n      endDate: new Date(),\n      quotePeriod: 1,\n      cartMode: \"out\"\n    };\n  }\n\n  addItemToCart = async(item, addedItemBranchChain, q) => {\n    const { cartList, activity, warehouse, inventoryType, category } = this.state;\n    const popCart = _.isEmpty(cartList)\n    const loadAccessories = async (parent) => {\n      const accessories = await this.getAccessories(parent.id);\n      const accessoryList = await Promise.all(accessories.Rows.map(async (acc, i) => {\n        return await packageItem(acc, i, parent);\n      }))\n    }\n    const packageItem = async (item, index, parent) => {\n      const defaultQuantity = parent ? item[52] : 1; //item[52] is \"defaultQuantity\"\n      let itemPackage = {\n        branchChain: parent ? [...parent.branchChain, item[7] + \"x\" + item[0]] : [activity.name, warehouse.name, inventoryType.name, category.name, item[7]],\n        quantity: {\n          actual: item[51] ? 0 : Math.ceil(defaultQuantity * q),\n          fraction: item[51] ? 0 : defaultQuantity * q,\n          default: defaultQuantity\n        },\n        available: item[22],\n        details: item,\n        icode: item[5],\n        id: item[2],\n        index: index,\n        name: item[7],\n        parent: parent,\n        rate: item[35],\n        type: item[19],\n        isOption: item[51],\n        isShort: false,\n        activity: activity,\n        warehouse: warehouse,\n        inventoryType: inventoryType,\n        category: category\n      }\n      if (itemPackage.type != \"ITEM\" && itemPackage.type != \"ACCESSORY\") {\n        await loadAccessories(itemPackage);\n      }\n      cartList[itemPackage.branchChain.join(\"~\")] = itemPackage;\n    }\n\n    // correct q if greater than supply\n    console.log(\"q is\", q, \"and availability is\", item[22]);\n    q = Math.min(q, item[22]);\n    \n    //add item or update quantity?\n    if (cartList[addedItemBranchChain]) {\n      Object.keys(cartList).forEach(key => {\n        if (key.indexOf(addedItemBranchChain) === 0) {\n          if (q <= 0 && !cartList[addedItemBranchChain].isOption) {\n            delete cartList[key];\n          } else {\n            // updating fraction value\n            if (!cartList[key].isOption) {\n              cartList[key].quantity.fraction = (cartList[key].quantity.default * q);\n            } else if (cartList[key].isOption && key === addedItemBranchChain) {\n              cartList[key].quantity.fraction = q;\n            }\n            // correcting negative fraction values\n            if (cartList[key].quantity.fraction < 0) {\n              cartList[key].quantity.fraction = 0;\n            }\n            // setting actual to next-highest whole num of fraction\n            cartList[key].quantity.actual = Math.ceil(cartList[key].quantity.fraction);\n          }\n        }\n      })\n    } else {\n      if (!item[51] && q != 0) await packageItem(item);\n    }\n\n    //\n    if (popCart) {\n      this.toggleCart(\"in\");\n    }\n    console.log(\"cartList:\", cartList);\n    this.setState({ cartList: cartList });\n  }\n\n  clearCart = () => {\n    this.setState({ cartList: {} })\n  }\n\n  changeRoute = (route) => {\n    this.setState({ route: route });\n  }\n\n  getCategories = async () => {\n    const { credentials, activity, inventoryType } = this.state;\n    if (this.state.inventoryType) {\n      this.page = 1;\n      const resp = await fetch(`${APIURL}/${activity.name}category/browse`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'orderby': 'Category',\n          'searchfieldoperators': ['<>', '='],\n          'searchfields': ['Inactive', 'InventoryTypeId'],\n          'searchfieldtypes': ['Text', 'Text'],\n          'searchfieldvalues': ['T', `${inventoryType.id}`],\n          'searchseparators': [',']\n        })\n      })\n        .catch(err => console.log(err));\n      //\n      const categories = await resp.json();\n      let categoryList = {};\n      categories.Rows.forEach((category, i) => {\n        categoryList[category[2]] = {\n          id: category[2],\n          value: category[2],\n          name: category[3],\n          label: category[3],\n          index: i\n        }\n      });\n      return categoryList;\n    } else {\n      return undefined;\n    }\n  }\n\n  getCredentials = () => {\n    fetch(`${APIURL}/jwt`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        UserName: 'joshua',\n        Password: 'icardius'\n      })\n    })\n      .then(response => response.json())\n      .then(res => {\n        console.log(\"api credentials:\",res);\n        this.setState({ credentials: res });\n      })\n      .catch((err, res) => { console.log(err, \"response:\", res) });\n  }\n\n  getInventory = async () => {\n    const { warehouse, activity, inventoryType, category, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/search`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'CurrencyId': '0000000E',\n          'WarehouseId': warehouse.id,\n          'AvailableFor': activity.code,\n          'InventoryTypeId': inventoryType.id,\n          'CategoryId': category.id,\n          'Classifiction': '',\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'HideInventoryWithZeroQuantity': true,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const inventory = await resp.json();\n      console.log(\"loaded inventory:\", inventory);\n      return inventory;\n    } else {\n      return null;\n    }\n  }\n\n  getAccessories = async (parentId) => {\n    const { warehouse, activity, inventoryType, category, startDate, endDate } = this.state;\n    if (warehouse && inventoryType && category) {\n      const resp = await fetch(`${APIURL}/inventorysearch/accessories`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.state.credentials.access_token}`,\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          'OrderId': '0000KG53',\n          'SessionId': '0000KG53',\n          'Lineage': parentId,\n          'WarehouseId': warehouse.id,\n          'FromDate': startDate,\n          'ToDate': endDate,\n          'ShowAvailability': true,\n          'ShowImages': true\n        })\n      })\n        .catch(err => console.log(\"error:\", err));\n      const accessories = await resp.json();\n      console.log(\"loaded accessories:\", accessories);\n      return accessories;\n    } else {\n      return null;\n    }\n  }\n\n  getInventoryTypes = async (filter) => {\n    const { credentials, activity, warehouse } = this.state;\n    const resp = await fetch(`${APIURL}/inventorytype/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'OrderBy',\n        'searchfieldoperators': ['<>', \"=\"],\n        'searchfields': ['Inactive', activity.label],\n        'searchfieldtypes': ['Text', 'Boolean'],\n        'searchfieldvalues': ['T', true]\n      })\n    })\n      .catch(err => console.log(err));\n    //\n    const types = await resp.json();\n    let inventoryTypeList = {};\n    types.Rows.forEach((type, i) => {\n      inventoryTypeList[type[0]] = {\n        id: type[0],\n        value: type[0],\n        name: type[1],\n        label: type[1],\n        index: i\n      }\n    });\n    return inventoryTypeList;\n  }\n\n  getWarehouses = async (filter) => {\n    const resp = await fetch(`${APIURL}/warehouse/browse`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.state.credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        'orderby': 'Warehouse',\n        'searchfieldoperators': ['<>'],\n        'searchfields': ['Inactive'],\n        'searchfieldtypes': ['Text'],\n        'searchfieldvalues': ['T']\n      })\n    })\n      .catch(err => console.log(err));\n\n    const warehouses = await resp.json();\n    let warehouseList = {};\n    warehouses.Rows.forEach((warehouse, i) => {\n      warehouseList[warehouse[0]] = {\n        id: warehouse[0],\n        value: warehouse[0],\n        name: warehouse[1],\n        label: warehouse[1],\n        code: warehouse[2],\n        index: i\n      }\n    })\n    return warehouseList;\n  }\n\n  setCategory = (e) => {\n    if (!e) {\n      console.log(\"category not set\");\n    } else {\n      this.setState({ category: e });\n    }\n  }\n\n  setDates = (dates) => {\n    const [start, end] = dates;\n    const quotePeriod = this.getNumberOfDays(start, end);\n    this.setState({ startDate: start, endDate: end, quotePeriod: quotePeriod });\n  }\n\n  setInventoryType = (e) => {\n    if (!e) {\n      console.log(\"inventoryType not set\");\n    } else {\n      this.setState({ inventoryType: e, category: null});\n    }\n  }\n\n  setActivity = (e) => {\n    this.setState({ activity: e, inventoryType: null });\n  }\n\n  setWarehouse = (e) => {\n    if (!e) {\n      console.log(\"warehouse not set\");\n    } else {\n      this.setState({ warehouse: e });\n    }\n  }\n\n  submitQuote = () => {\n\n  }\n\n  checkAvailability = (inventoryId, start, end) => {\n    fetch(`${APIURL}/inventoryavailability/getinventoryavailability`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${this.state.credentials.access_token}`,\n        'content-type': 'application/json'\n      },\n      body: {\n        InventoryId: inventoryId,\n        Warehouse: this.state.warehouse,\n        FromDate: start,\n        ToDate: end\n      }\n    })\n  }\n\n  toggleCart = (mode) => {\n    const { cartMode } = this.state;\n    let newMode = undefined;\n    if (typeof mode === \"string\") {\n      newMode = mode;\n    } else {\n      newMode = cartMode === \"in\" ? \"out\" : \"in\";\n    }\n    this.setState({ cartMode: newMode });\n  }\n\n  getNumberOfDays = (start, end) => {\n    const d1 = new Date(start);\n    const d2 = new Date(end);\n    const oneDay = 1000 * 60 * 60 * 24;\n    const diffInTime = d2.getTime() - d1.getTime();\n    const diffInDays = Math.round(diffInTime / oneDay);\n    return diffInDays + 1;\n  }\n\n  componentDidMount() {\n    this.getCredentials();\n  } \n\n  render() {\n    const { route, warehouse, activity, inventoryType, category, subcategory, startDate, endDate, quotePeriod, cartList, cartMode } = this.state;\n    //console.log(\"App render with state:\", this.state);\n    //\n    let headerSection, paramColumn, catalogColumn, cartColumn, cartSwitch, mainApp = undefined;\n    //\n    switch (route) {\n      case 'home':\n        headerSection = \n        <div className=\"header-banner\">\n          <div className=\"banner-content\">\n            <h1>Welcome!</h1>\n          </div>\n          <div className=\"banner-background\">\n            <img src=\"https://h7f7z2r7.stackpathcdn.com/sites/default/files/images/articles/blakcstonemain.jpg\"/>\n          </div>\n        </div>\n\n        catalogColumn =\n        <div>\n          \n        </div>\n        break;\n      case 'catalog':\n        if (this.state.credentials) {\n          switch (this.state.credentials.statuscode) {\n            case 0:\n              paramColumn =\n                <div className=\"column left\">\n                  <div className=\"column-header param-set\">\n                    <h1><i>tune</i>PARAMETERS</h1>\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperDate\n                      startDate={startDate}\n                      endDate={endDate}\n                      mode=\"start\"\n                      setDates={this.setDates}\n                    />\n                    <SuperDate\n                      startDate={startDate}\n                      endDate={endDate}\n                      mode=\"end\"\n                      setDates={this.setDates}\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <RadioButton\n                      name=\"Activity Type\"\n                      options={ACTIVITYLIST}\n                      selected={activity.name}\n                      action={this.setActivity}\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"warehouse\"\n                      loader={this.getWarehouses}\n                      action={this.setWarehouse}\n                      reloadOn={[activity]}\n                      placeholder=\"Select a Warehouse\"\n                      searchable={false}\n                      preload\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"Inventory Type\"\n                      loader={this.getInventoryTypes}\n                      action={this.setInventoryType}\n                      reloadOn={[activity, warehouse]}\n                      placeholder=\"Select an Inventory Type\"\n                      searchable={true}\n                      value={inventoryType}\n                    // preload\n                    />\n                  </div>\n                  <div className=\"param-set\">\n                    <SuperSelect\n                      name=\"category\"\n                      loader={this.getCategories}\n                      action={this.setCategory}\n                      reloadOn={[activity, warehouse, inventoryType]}\n                      placeholder=\"Select a Category\"\n                      searchable={true}\n                      value={category}\n                    />\n                  </div>\n                </div>\n  \n              catalogColumn =\n                <div className=\"column center\">\n                  <div className=\"column-header param set\">\n                    <h1><i>menu_book</i>{activity.label.toUpperCase()} CATALOG</h1>\n                  </div>\n                  <Catalog\n                    loader={this.getInventory}\n                    getAccessories={this.getAccessories}\n                    activity={activity}\n                    warehouse={warehouse}\n                    inventoryType={inventoryType}\n                    category={category}\n                    startDate={startDate}\n                    endDate={endDate}\n                    addItemToCart={this.addItemToCart}\n                    cart={cartList}\n                  />\n                </div>\n  \n              cartColumn =\n                <div className=\"column right\">\n                  <Cart\n                  cartMode={cartMode}\n                  cartList={cartList}\n                  activityList={ACTIVITYLIST}\n                  quotePeriod={quotePeriod}\n                  updateCart={this.addItemToCart}\n                  clearCart={this.clearCart}\n                  submitQuote={this.submitQuote}\n                  toggleCart={this.toggleCart}\n                  />\n                </div>\n              \n              mainApp =\n                <article>\n                  <div className=\"body-margin\"></div>\n                  <div className=\"body-main\">\n                    {paramColumn}\n                    {catalogColumn}\n                  </div>\n                  <div className=\"body-margin\">\n                    {cartColumn}\n                  </div>\n                </article>\n              break;\n            case undefined:\n              catalogColumn = <div className=\"modal\"><Loader /></div>\n              break;\n            default:\n              console.log(\"there was a problem loading your credentials\");\n          }\n        } else {\n          mainApp = <div className=\"modal abs\"><Loader input=\"CONNECTING TO DATABASE\"/></div>\n        }\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          <nav>\n            <div className=\"margin-left\">\n\n            </div>\n            <div className=\"main-nav\">\n              <ul>\n                <li onClick={() => this.changeRoute('catalog')}>Get a Quote</li>\n                <li>Call an Agent</li>\n                <li>Our Website</li>\n                <li>News</li>\n              </ul>\n            </div>\n            <div className=\"margin-right\">\n            </div>\n          </nav>\n          {headerSection}\n        </header>\n        {mainApp}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}